This is autoconf-archive.info, produced by makeinfo version 6.8 from
autoconf-archive.texi.

This manual is for GNU Autoconf Archive version 2023.02.20, a collection
of freely re-usable Autoconf macros.

Copyright (C) 2022 Autoconf Archive Maintainers
<autoconf-archive-maintainers@gnu.org>

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with no
Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A
copy of the license is included in the section entitled "GNU Free
Documentation License".
INFO-DIR-SECTION Software development
START-INFO-DIR-ENTRY
* Autoconf Archive: (autoconf-archive). A collection of re-usable Autoconf macros.
END-INFO-DIR-ENTRY


File: autoconf-archive.info,  Node: Top,  Next: Introduction,  Up: (dir)

GNU Autoconf Archive
********************

This manual is for GNU Autoconf Archive version 2023.02.20, a collection
of freely re-usable Autoconf macros.

Copyright (C) 2022 Autoconf Archive Maintainers
<autoconf-archive-maintainers@gnu.org>

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with no
Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A
copy of the license is included in the section entitled "GNU Free
Documentation License".

* Menu:

* Introduction::                        Project Synopsis, home page links, etc.
* Downloads::                           How to find git repository and release tarballs.
* How to contribute::                   Submission Guidelines.
* The Macros::                          Alphabetic index of all macros.
* GNU Free Documentation License::      Copying and sharing this manual.


File: autoconf-archive.info,  Node: Introduction,  Next: Downloads,  Prev: Top,  Up: Top

1 Introduction
**************

The GNU Autoconf Archive is a collection of more than 500 macros for GNU
Autoconf (https://www.gnu.org/software/autoconf) that have been
contributed as free software by friendly supporters of the cause from
all over the Internet.  Every single one of those macros can be re-used
without imposing any restrictions whatsoever on the licensing of the
generated 'configure' script.  In particular, it is possible to use all
those macros in 'configure' scripts that are meant for non-free
software.  This policy is unusual for a Free Software Foundation
project.  The FSF firmly believes that software ought to be free, and
software licenses like the GPL are specifically designed to ensure that
derivative work based on free software must be free as well.  In case of
Autoconf, however, an exception has been made, because Autoconf is at
such a pivotal position in the software development tool chain that the
benefits from having this tool available as widely as possible outweigh
the disadvantage that some authors may choose to use it, too, for
proprietary software.

This official web site of this project is located at
<https://www.gnu.org/software/autoconf-archive/>.  All available
information concerning this project is referenced from there.

If you have questions, suggestions, are any other feedback that you'd
like to share, then please don't hesitate to contact the Archive
maintainers at <autoconf-archive-maintainers@gnu.org>.


File: autoconf-archive.info,  Node: Downloads,  Next: How to contribute,  Prev: Introduction,  Up: Top

2 Downloading the GNU Autoconf Archive
**************************************

The macros distributed by the Archive are maintained in a public Git
repository at 'git://git.sv.gnu.org/autoconf-archive.git'.  That
repository can be cloned anonymously, which is probably the most
convenient way to access the Archive.  Gitweb offers an RSS feed
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=rss) for
subscription that informs about changes to the repository.  The same
information is available via e-mail, too, on the commits mailing list
(http://lists.gnu.org/mailman/listinfo/autoconf-archive-commits).

For the benefit of everyone who doesn't use Git, traditional release
archives can be downloaded from any GNU mirror, i.e.
<http://ftpmirror.gnu.org/autoconf-archive/>.  New release are always
announced on the low-traffic announcements mailing list
(http://lists.gnu.org/mailman/listinfo/autoconf-archive-announce).


File: autoconf-archive.info,  Node: How to contribute,  Next: The Macros,  Prev: Downloads,  Up: Top

3 How to contribute to the GNU Autoconf Archive
***********************************************

3.1 Macro Format
================

Each macro in the Archive has an all-upper-case name with the prefix
'AX_'.  The macro is stored in a file with the same name, in lower case,
and with the suffix '.m4'.  Unless absolutely necessary, the file
contents should be in ASCII. For example, use apostrophe (U+27) for
quoting identifiers instead of Unicode quotation mark characters U+2018,
U+2019.

The file should begin with a header comment containing three named
sections: synopsis, description, and license.

The synopsis gives a summary of the macro usage and arguments.  In this
section, square brackets ('[]') are used to indicate optional
parameters, and may be nested.

The description contains a prose description of the macro.  It should
describe the function of the macro, and the meaning of any arguments
given in the synopsis.  The description should also identify:

   * any default macro parameter values
   * any new '--with' or '--enable' options, and their default values
   * any argument variables consulted ('AC_ARG_VAR')
   * any substituted variables ('AC_SUBST')
   * any defined precompiler constants ('AC_DEFINE')

Macros should be defined with 'AC_DEFUN', using correct quoting.
Comments should be used liberally within the macro, with 'dnl' used for
comments at the m4sh level and '#' used for comments at the shell level.

If a macro is renamed, the 'AU_ALIAS' macro should be used to guide
users of the old name to the new name:

     AU_ALIAS([OLD_NAME], [AX_NEW_NAME])

3.2 Submitting Macros
=====================

To submit updates to the Autoconf Archive, please create an issue in the
patch tracker
(http://savannah.gnu.org/patch/?func=additem&group=autoconf-archive) and
attach a (preferably 'git-format-patch(1)'-formatted) patch file.  Users
of 'github.com' may prefer to create a pull request for the Autoconf
Archive Mirror at Github
(https://github.com/autoconf-archive/autoconf-archive).  Please make
sure your submission contains the following items:

   * a synopsis that shows how the macro must be be called,

   * a brief description of the macro's purpose,

   * the list of authors (optionally with e-mail addresses),

   * licensing terms, and

   * the m4 source code.

Macros can be submitted under any GPL-compatible free software license
(https://www.gnu.org/licenses/license-list.html#GPLCompatibleLicenses).
The Free Software Foundation, however, recommends use of the
all-permissive license
(https://www.gnu.org/prep/maintain/html_node/License-Notices-for-Other-Files.html)
for Autoconf macros.

3.3 Writing Highly Usable Macros
================================

Autoconf macros are used in a surprising variety of ways, and a
well-written macro should be flexible enough to suit all of these uses.

See the Autotools Mythbuster
(http://www.flameeyes.eu/autotools-mythbuster) for suggestions on how to
write well-encapsulated, portable macros.


File: autoconf-archive.info,  Node: The Macros,  Next: GNU Free Documentation License,  Prev: How to contribute,  Up: Top

4 The Macros
************

* Menu:

* ax_absolute_header::
* ax_ac_append_to_file::
* ax_ac_print_to_file::
* ax_add_am_macro::
* ax_add_am_macro_static::
* ax_add_am_trilinos_makefile_export::
* ax_add_fortify_source::
* ax_add_recursive_am_macro::
* ax_add_recursive_am_macro_static::
* ax_afs::
* ax_am_jobserver::
* ax_am_macros::
* ax_am_macros_static::
* ax_am_override_var::
* ax_append_compile_flags::
* ax_append_flag::
* ax_append_link_flags::
* ax_append_to_file::
* ax_arg_with_path_style::
* ax_asm_inline::
* ax_at_check_pattern::
* ax_auto_include_headers::
* ax_berkeley_db::
* ax_berkeley_db_cxx::
* ax_blas::
* ax_blas_f77_func::
* ax_boost_asio::
* ax_boost_atomic::
* ax_boost_base::
* ax_boost_chrono::
* ax_boost_context::
* ax_boost_coroutine::
* ax_boost_date_time::
* ax_boost_filesystem::
* ax_boost_iostreams::
* ax_boost_json::
* ax_boost_locale::
* ax_boost_log::
* ax_boost_log_setup::
* ax_boost_process::
* ax_boost_program_options::
* ax_boost_python::
* ax_boost_random::
* ax_boost_regex::
* ax_boost_serialization::
* ax_boost_signals::
* ax_boost_system::
* ax_boost_test_exec_monitor::
* ax_boost_thread::
* ax_boost_unit_test_framework::
* ax_boost_wave::
* ax_boost_wserialization::
* ax_build_date_epoch::
* ax_c99_inline::
* ax_c___attribute__::
* ax_c_arithmetic_rshift::
* ax_c_compile_value::
* ax_c_declare_block::
* ax_c_float_words_bigendian::
* ax_c_long_long::
* ax_c_referenceable_passed_va_list::
* ax_c_restrict::
* ax_c_var_func::
* ax_cache_size::
* ax_caolan_check_package::
* ax_caolan_search_package::
* ax_cc_for_build::
* ax_cc_maxopt::
* ax_cf_ebcdic::
* ax_cflags_aix_option::
* ax_cflags_force_c89::
* ax_cflags_hpux_option::
* ax_cflags_irix_option::
* ax_cflags_no_writable_strings::
* ax_cflags_strict_prototypes::
* ax_cflags_sun_option::
* ax_cflags_warn_all::
* ax_check_aligned_access_required::
* ax_check_allocated_ctime::
* ax_check_awk__v::
* ax_check_awk__x_escapes::
* ax_check_awk_and::
* ax_check_awk_argind::
* ax_check_awk_array_delete::
* ax_check_awk_array_delete_elem::
* ax_check_awk_array_in::
* ax_check_awk_asort::
* ax_check_awk_asorti::
* ax_check_awk_associative_array::
* ax_check_awk_atan2::
* ax_check_awk_compl::
* ax_check_awk_conditional_expression::
* ax_check_awk_cos::
* ax_check_awk_environ::
* ax_check_awk_errno::
* ax_check_awk_exit::
* ax_check_awk_exp::
* ax_check_awk_gensub::
* ax_check_awk_getline::
* ax_check_awk_gsub::
* ax_check_awk_ignorecase::
* ax_check_awk_index::
* ax_check_awk_int::
* ax_check_awk_length::
* ax_check_awk_log::
* ax_check_awk_lshift::
* ax_check_awk_match_2parms::
* ax_check_awk_match_3parms::
* ax_check_awk_operator_multiply_multiply::
* ax_check_awk_operator_square::
* ax_check_awk_or::
* ax_check_awk_printf::
* ax_check_awk_rand::
* ax_check_awk_rshift::
* ax_check_awk_sin::
* ax_check_awk_split::
* ax_check_awk_sprintf::
* ax_check_awk_sqrt::
* ax_check_awk_srand::
* ax_check_awk_strftime::
* ax_check_awk_strtonum::
* ax_check_awk_sub::
* ax_check_awk_substr::
* ax_check_awk_system::
* ax_check_awk_systime::
* ax_check_awk_tolower::
* ax_check_awk_toupper::
* ax_check_awk_user_defined_functions::
* ax_check_awk_var_regexp::
* ax_check_awk_variable_value_pairs::
* ax_check_awk_xor::
* ax_check_class::
* ax_check_classpath::
* ax_check_compile_flag::
* ax_check_define::
* ax_check_docbook_dtd::
* ax_check_docbook_xslt::
* ax_check_docbook_xslt_min::
* ax_check_dos_filesys::
* ax_check_enable_debug::
* ax_check_func_in::
* ax_check_gd::
* ax_check_gir_symbols_gjs::
* ax_check_girs_gjs::
* ax_check_gl::
* ax_check_glu::
* ax_check_glut::
* ax_check_glx::
* ax_check_gnu_make::
* ax_check_icu::
* ax_check_java_home::
* ax_check_java_plugin::
* ax_check_junit::
* ax_check_library::
* ax_check_link_flag::
* ax_check_mysql::
* ax_check_mysql_db::
* ax_check_mysqlr::
* ax_check_off64_t::
* ax_check_openssl::
* ax_check_page_aligned_malloc::
* ax_check_pathfind::
* ax_check_pathname_style::
* ax_check_pcre2::
* ax_check_pgsql_db::
* ax_check_posix_regcomp::
* ax_check_posix_sysinfo::
* ax_check_postgres_db::
* ax_check_preproc_flag::
* ax_check_rqrd_class::
* ax_check_sign::
* ax_check_strcspn::
* ax_check_strftime::
* ax_check_struct_for::
* ax_check_symbol::
* ax_check_sys_siglist::
* ax_check_typedef::
* ax_check_uname_syscall::
* ax_check_user::
* ax_check_vscript::
* ax_check_x86_features::
* ax_check_zlib::
* ax_code_coverage::
* ax_compare_version::
* ax_compile_check_sizeof::
* ax_compiler_flags::
* ax_compiler_flags_cflags::
* ax_compiler_flags_cxxflags::
* ax_compiler_flags_gir::
* ax_compiler_flags_ldflags::
* ax_compiler_vendor::
* ax_compiler_version::
* ax_compute_relative_paths::
* ax_compute_standard_relative_paths::
* ax_cond_with_level::
* ax_config_feature::
* ax_configure_args::
* ax_count_cpus::
* ax_cpu_freq::
* ax_cpu_vendor::
* ax_create_generic_config::
* ax_create_pkgconfig_info::
* ax_create_stdint_h::
* ax_create_target_h::
* ax_cvs::
* ax_cxx_bool::
* ax_cxx_compile_stdcxx::
* ax_cxx_compile_stdcxx_0x::
* ax_cxx_compile_stdcxx_11::
* ax_cxx_compile_stdcxx_14::
* ax_cxx_compile_stdcxx_17::
* ax_cxx_complex_math_in_namespace_std::
* ax_cxx_const_cast::
* ax_cxx_cppflags_std_lang::
* ax_cxx_cxxflags_std_lang::
* ax_cxx_default_template_parameters::
* ax_cxx_delete_method::
* ax_cxx_dtor_after_atexit::
* ax_cxx_dynamic_cast::
* ax_cxx_enum_computations::
* ax_cxx_enum_computations_with_cast::
* ax_cxx_erase_iterator_type::
* ax_cxx_exceptions::
* ax_cxx_explicit::
* ax_cxx_explicit_instantiations::
* ax_cxx_explicit_template_function_qualification::
* ax_cxx_extern_template::
* ax_cxx_full_specialization_syntax::
* ax_cxx_function_nontype_parameters::
* ax_cxx_function_try_blocks::
* ax_cxx_gcc_abi_demangle::
* ax_cxx_gnucxx_hashmap::
* ax_cxx_have_bad_function_call::
* ax_cxx_have_bind::
* ax_cxx_have_bit_and::
* ax_cxx_have_bit_or::
* ax_cxx_have_bit_xor::
* ax_cxx_have_complex::
* ax_cxx_have_complex_math1::
* ax_cxx_have_complex_math2::
* ax_cxx_have_cref::
* ax_cxx_have_empty_iostream::
* ax_cxx_have_ext_hash_map::
* ax_cxx_have_ext_hash_set::
* ax_cxx_have_ext_slist::
* ax_cxx_have_freeze_sstream::
* ax_cxx_have_function::
* ax_cxx_have_hash::
* ax_cxx_have_ieee_math::
* ax_cxx_have_is_bind_expression::
* ax_cxx_have_is_placeholder::
* ax_cxx_have_koenig_lookup::
* ax_cxx_have_long_long_for_iostream::
* ax_cxx_have_mem_fn::
* ax_cxx_have_numeric_limits::
* ax_cxx_have_placeholders::
* ax_cxx_have_ref::
* ax_cxx_have_reference_wrapper::
* ax_cxx_have_sstream::
* ax_cxx_have_std::
* ax_cxx_have_stl::
* ax_cxx_have_string_push_back::
* ax_cxx_have_system_v_math::
* ax_cxx_have_valarray::
* ax_cxx_have_vector_at::
* ax_cxx_header_pre_stdcxx::
* ax_cxx_header_stdcxx_0x::
* ax_cxx_header_stdcxx_98::
* ax_cxx_header_stdcxx_tr1::
* ax_cxx_header_tr1_unordered_map::
* ax_cxx_header_tr1_unordered_set::
* ax_cxx_header_unordered_map::
* ax_cxx_header_unordered_set::
* ax_cxx_ldflags_std_lang::
* ax_cxx_member_constants::
* ax_cxx_member_templates::
* ax_cxx_member_templates_outside_class::
* ax_cxx_mutable::
* ax_cxx_namespace_std::
* ax_cxx_namespaces::
* ax_cxx_new_for_scoping::
* ax_cxx_old_for_scoping::
* ax_cxx_partial_ordering::
* ax_cxx_partial_specialization::
* ax_cxx_reinterpret_cast::
* ax_cxx_restrict_this::
* ax_cxx_rtti::
* ax_cxx_rvalue_references::
* ax_cxx_static_cast::
* ax_cxx_stlport_hashmap::
* ax_cxx_template_keyword_qualifier::
* ax_cxx_template_qualified_base_class::
* ax_cxx_template_qualified_return_type::
* ax_cxx_template_scoped_argument_matching::
* ax_cxx_templates::
* ax_cxx_templates_as_template_arguments::
* ax_cxx_typename::
* ax_cxx_use_numtrait::
* ax_cxx_var_prettyfunc::
* ax_cxx_verbose_terminate_handler::
* ax_czmq::
* ax_decl_wchar_max::
* ax_define_integer_bits::
* ax_define_sub_path::
* ax_dirname::
* ax_dist_msi::
* ax_dist_rpm::
* ax_dll_string::
* ax_elisp::
* ax_enable_builddir::
* ax_execinfo::
* ax_expand_prefix::
* ax_ext::
* ax_ext_check_header::
* ax_ext_have_lib::
* ax_extend_srcdir::
* ax_extra_dist::
* ax_f77_cmain_fflags::
* ax_f90_header::
* ax_f90_internal_headmod::
* ax_f90_library::
* ax_f90_library_setup::
* ax_f90_module::
* ax_f90_module_extension::
* ax_f90_module_flag::
* ax_fc_check_define::
* ax_file_escapes::
* ax_find_hamcrest::
* ax_find_junit::
* ax_find_scala_stdlib::
* ax_forceinline::
* ax_func_accept_argtypes::
* ax_func_getopt_long::
* ax_func_memmove::
* ax_func_mkdir::
* ax_func_posix_memalign::
* ax_func_snprintf::
* ax_func_which_gethostbyname_r::
* ax_func_which_getservbyname_r::
* ax_gcc_archflag::
* ax_gcc_builtin::
* ax_gcc_const_call::
* ax_gcc_func_attribute::
* ax_gcc_lib::
* ax_gcc_libgcc_eh::
* ax_gcc_libsupcxx::
* ax_gcc_malloc_call::
* ax_gcc_var_attribute::
* ax_gcc_warn_unused_result::
* ax_gcc_x86_avx_xgetbv::
* ax_gcc_x86_cpu_supports::
* ax_gcc_x86_cpuid::
* ax_generate_changelog::
* ax_gnu_autotest::
* ax_have_adns::
* ax_have_epoll::
* ax_have_poll::
* ax_have_qt::
* ax_have_select::
* ax_include_strcasecmp::
* ax_install_files::
* ax_int128::
* ax_is_release::
* ax_java_check_class::
* ax_java_options::
* ax_jni_include_dir::
* ax_lapack::
* ax_lib_beecrypt::
* ax_lib_cgal_core::
* ax_lib_crypto::
* ax_lib_curl::
* ax_lib_ev::
* ax_lib_expat::
* ax_lib_firebird::
* ax_lib_gcrypt::
* ax_lib_gdal::
* ax_lib_hdf5::
* ax_lib_id3::
* ax_lib_libkml::
* ax_lib_metis::
* ax_lib_mysql::
* ax_lib_mysqlcppconn::
* ax_lib_netcdf4::
* ax_lib_nettle::
* ax_lib_nokalva::
* ax_lib_oracle_occi::
* ax_lib_oracle_oci::
* ax_lib_orbit2::
* ax_lib_postgresql::
* ax_lib_readline::
* ax_lib_samtools::
* ax_lib_socket_nsl::
* ax_lib_sqlite3::
* ax_lib_tabix::
* ax_lib_taglib::
* ax_lib_trace::
* ax_lib_upnp::
* ax_lib_wad::
* ax_lib_xalan::
* ax_lib_xerces::
* ax_lib_xml_security::
* ax_libgcj_jar::
* ax_libtoolize_cflags::
* ax_llvm::
* ax_lua::
* ax_luarocks_rock::
* ax_maintainer_mode_auto_silent::
* ax_missing_prog::
* ax_mpi::
* ax_mpip::
* ax_ms_cpprest::
* ax_need_awk::
* ax_normalize_path::
* ax_not_enable_frame_pointer::
* ax_numeric_namedlevel::
* ax_open62541_check_h::
* ax_open62541_check_lib::
* ax_open62541_path::
* ax_openmp::
* ax_patch_libtool_changing_cmds_ifs::
* ax_path_bdb::
* ax_path_generic::
* ax_path_lib_pcre::
* ax_path_milter::
* ax_path_missing::
* ax_perl_ext::
* ax_perl_ext_flags::
* ax_perl_module_version::
* ax_pgsql_priv_root::
* ax_pkg_check_modules::
* ax_pkg_mico::
* ax_pkg_swig::
* ax_prefix_config_h::
* ax_prepend_flag::
* ax_print_to_file::
* ax_printf_size_t::
* ax_prog_apache::
* ax_prog_bison::
* ax_prog_bison_version::
* ax_prog_cc_char_subscripts::
* ax_prog_cc_for_build::
* ax_prog_cc_mpi::
* ax_prog_cp_s::
* ax_prog_crontab::
* ax_prog_cxx_for_build::
* ax_prog_cxx_mpi::
* ax_prog_date::
* ax_prog_dotnetcore_version::
* ax_prog_doxygen::
* ax_prog_emacs::
* ax_prog_f77_mpi::
* ax_prog_fasm::
* ax_prog_fasm_opt::
* ax_prog_fc_mpi::
* ax_prog_fig2dev::
* ax_prog_flex::
* ax_prog_flex_version::
* ax_prog_gjs::
* ax_prog_guile_version::
* ax_prog_haxe_version::
* ax_prog_help2man::
* ax_prog_hla::
* ax_prog_hla_opt::
* ax_prog_httpd::
* ax_prog_jar::
* ax_prog_java::
* ax_prog_java_cc::
* ax_prog_java_works::
* ax_prog_javac::
* ax_prog_javac_works::
* ax_prog_javadoc::
* ax_prog_javah::
* ax_prog_masm::
* ax_prog_masm_opt::
* ax_prog_md5sum::
* ax_prog_modprobe::
* ax_prog_mysql::
* ax_prog_mysqladmin::
* ax_prog_mysqld::
* ax_prog_mysqlimport::
* ax_prog_mysqlshow::
* ax_prog_nasm::
* ax_prog_nasm_opt::
* ax_prog_perl_modules::
* ax_prog_perl_version::
* ax_prog_pgclient::
* ax_prog_python_version::
* ax_prog_robot::
* ax_prog_ruby_version::
* ax_prog_scala::
* ax_prog_scalac::
* ax_prog_scp::
* ax_prog_splint::
* ax_prog_ssh::
* ax_prog_tasm::
* ax_prog_tasm_opt::
* ax_prog_tcl::
* ax_prog_xsltproc::
* ax_prog_yasm::
* ax_prog_yasm_opt::
* ax_prototype::
* ax_prototype_accept::
* ax_prototype_getsockname::
* ax_prototype_setsockopt::
* ax_pthread::
* ax_python::
* ax_python_config_var::
* ax_python_devel::
* ax_python_embed::
* ax_python_module::
* ax_python_module_version::
* ax_r_package::
* ax_recursive_eval::
* ax_require_defined::
* ax_require_one_func::
* ax_restore_flags::
* ax_restore_flags_with_prefix::
* ax_rpm_init::
* ax_ruby_devel::
* ax_ruby_ext::
* ax_save_flags::
* ax_save_flags_with_prefix::
* ax_set_default_paths_system::
* ax_short_sleep::
* ax_silent_mode::
* ax_sip_devel::
* ax_spec_file::
* ax_spec_package_version::
* ax_split_version::
* ax_string_strcasecmp::
* ax_strings_strcasecmp::
* ax_struct_semun::
* ax_subdir_files::
* ax_subdirs_configure::
* ax_subst_with::
* ax_swig_enable_cxx::
* ax_swig_multi_module_support::
* ax_swig_python::
* ax_switch_flags::
* ax_sys_dev_poll::
* ax_sys_largefile_sensitive::
* ax_sys_perlsharpbang::
* ax_sys_weak_alias::
* ax_sysv_ipc::
* ax_tls::
* ax_trilinos_amesos::
* ax_trilinos_base::
* ax_trilinos_epetra::
* ax_trilinos_epetraext::
* ax_trilinos_epetraext_hdf5::
* ax_trilinos_rtop::
* ax_trilinos_rythmos::
* ax_trilinos_teuchos::
* ax_trilinos_thyra::
* ax_trilinos_thyra_epetra::
* ax_trilinos_thyra_epetraext::
* ax_try_awk_anyout::
* ax_try_awk_expout::
* ax_try_compile_java::
* ax_try_run_java::
* ax_type_socklen_t::
* ax_upload::
* ax_valgrind_check::
* ax_var_pop::
* ax_var_push::
* ax_var_timezone_externals::
* ax_very_nice::
* ax_warning_default_aclocaldir::
* ax_warning_default_pkgconfig::
* ax_wint_t::
* ax_with_apxs::
* ax_with_build_path::
* ax_with_curses::
* ax_with_curses_extra::
* ax_with_dmalloc::
* ax_with_mpatrol::
* ax_with_prog::
* ax_xercesc::
* ax_xsdcxx::
* ax_xtra_classpath::
* ax_zmq::
* ax_zoneinfo::


File: autoconf-archive.info,  Node: ax_absolute_header,  Next: ax_ac_append_to_file,  Up: The Macros

ax_absolute_header
==================

Synopsis
********

     AX_ABSOLUTE_HEADER(HEADER1 HEADER2 ...)

Description
***********

Find the absolute name of a header file, assuming the header exists.  If
the header were sys/inttypes.h, this macro would define
ABSOLUTE_SYS_INTTYPES_H to the '""' quoted absolute name of
sys/inttypes.h in config.h (e.g.  '#define ABSOLUTE_SYS_INTTYPES_H
"///usr/include/sys/inttypes.h"').  The three "///" are to pacify Sun C
5.8, which otherwise would say "warning: #include of /usr/include/...
may be non-portable".  Use '""', not '<>', so that the /// cannot be
confused with a C99 comment.

Source Code
***********

Download the latest version of 'ax_absolute_header.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_absolute_header.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_absolute_header.m4).

License
*******

Copyright (C) 2009 Derek Price
Copyright (C) 2009 Rhys Ulerich <rhys.ulerich@gmail.com>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_ac_append_to_file,  Next: ax_ac_print_to_file,  Prev: ax_absolute_header,  Up: The Macros

ax_ac_append_to_file
====================

Synopsis
********

     AX_AC_APPEND_TO_FILE([FILE],[DATA])

Description
***********

Appends the specified data to the specified Autoconf is run.  If you
want to append to a file when configure is run use AX_APPEND_TO_FILE
instead.

Source Code
***********

Download the latest version of 'ax_ac_append_to_file.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_ac_append_to_file.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_ac_append_to_file.m4).

License
*******

Copyright (C) 2009 Allan Caffee <allan.caffee@gmail.com>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_ac_print_to_file,  Next: ax_add_am_macro,  Prev: ax_ac_append_to_file,  Up: The Macros

ax_ac_print_to_file
===================

Synopsis
********

     AX_AC_PRINT_TO_FILE([FILE],[DATA])

Description
***********

Writes the specified data to the specified file when Autoconf is run.
If you want to print to a file when configure is run use
AX_PRINT_TO_FILE instead.

Source Code
***********

Download the latest version of 'ax_ac_print_to_file.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_ac_print_to_file.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_ac_print_to_file.m4).

License
*******

Copyright (C) 2009 Allan Caffee <allan.caffee@gmail.com>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_add_am_macro,  Next: ax_add_am_macro_static,  Prev: ax_ac_print_to_file,  Up: The Macros

ax_add_am_macro
===============

Synopsis
********

     AX_ADD_AM_MACRO([RULE])

Description
***********

Adds the specified rule to $AMINCLUDE. This macro will only work
properly with implementations of Make which allow include statements.
See also AX_ADD_AM_MACRO_STATIC.

Source Code
***********

Download the latest version of 'ax_add_am_macro.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_add_am_macro.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_add_am_macro.m4).

License
*******

Copyright (C) 2009 Tom Howard <tomhoward@users.sf.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_add_am_macro_static,  Next: ax_add_am_trilinos_makefile_export,  Prev: ax_add_am_macro,  Up: The Macros

ax_add_am_macro_static
======================

Synopsis
********

     AX_ADD_AM_MACRO_STATIC([RULE])

Description
***********

Adds the specified rule to $AMINCLUDE.

Source Code
***********

Download the latest version of 'ax_add_am_macro_static.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_add_am_macro_static.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_add_am_macro_static.m4).

License
*******

Copyright (C) 2009 Tom Howard <tomhoward@users.sf.net>
Copyright (C) 2009 Allan Caffee <allan.caffee@gmail.com>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_add_am_trilinos_makefile_export,  Next: ax_add_fortify_source,  Prev: ax_add_am_macro_static,  Up: The Macros

ax_add_am_trilinos_makefile_export
==================================

Synopsis
********

     AX_ADD_AM_TRILINOS_MAKEFILE_EXPORT(EXPORT_SUFFIX [, ACTION-IF-NOT-FOUND])

Description
***********

Checks if a file named <Makefile.export.EXPORT_SUFFIX> appears in the
$TRILINOS_INCLUDE directory.  If so, adds an include for it using the
AX_AM_MACROS framework.

If ACTION-IF-NOT-FOUND is not provided, configure fails.

Source Code
***********

Download the latest version of 'ax_add_am_trilinos_makefile_export.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_add_am_trilinos_makefile_export.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_add_am_trilinos_makefile_export.m4).

License
*******

Copyright (C) 2009 Rhys Ulerich <rhys.ulerich@gmail.com>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_add_fortify_source,  Next: ax_add_recursive_am_macro,  Prev: ax_add_am_trilinos_makefile_export,  Up: The Macros

ax_add_fortify_source
=====================

Synopsis
********

     AX_ADD_FORTIFY_SOURCE

Description
***********

Check whether -D_FORTIFY_SOURCE=2 can be added to CPPFLAGS without macro
redefinition warnings, other cpp warnings or linker.  Some distributions
(such as Ubuntu or Gentoo Linux) enable _FORTIFY_SOURCE globally in
their compilers, leading to unnecessary warnings in the form of

       <command-line>:0:0: error: "_FORTIFY_SOURCE" redefined [-Werror]
       <built-in>: note: this is the location of the previous definition

which is a problem if -Werror is enabled.  This macro checks whether
_FORTIFY_SOURCE is already defined, and if not, adds -D_FORTIFY_SOURCE=2
to CPPFLAGS.

Newer mingw-w64 msys2 package comes with a bug in
headers-git-7.0.0.5546.d200317d-1.  It broke -D_FORTIFY_SOURCE support,
and would need -lssp or -fstack-protector.  See
https://github.com/msys2/MINGW-packages/issues/5803.  Try to actually
link it.

Source Code
***********

Download the latest version of 'ax_add_fortify_source.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_add_fortify_source.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_add_fortify_source.m4).

License
*******

Copyright (C) 2017 David Seifert <soap@gentoo.org>
Copyright (C) 2019, 2023 Reini Urban <rurban@cpan.org>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_add_recursive_am_macro,  Next: ax_add_recursive_am_macro_static,  Prev: ax_add_fortify_source,  Up: The Macros

ax_add_recursive_am_macro
=========================

Synopsis
********

     AX_ADD_RECURSIVE_AM_MACRO([TARGET],[RULE])

Description
***********

Adds the specified rule to $AMINCLUDE along with a TARGET-recursive rule
that will call TARGET for the current directory and TARGET-am
recursively for each subdirectory.  See also
AX_ADD_RECURSIVE_AM_MACRO_STATIC.

Source Code
***********

Download the latest version of 'ax_add_recursive_am_macro.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_add_recursive_am_macro.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_add_recursive_am_macro.m4).

License
*******

Copyright (C) 2009 Tom Howard <tomhoward@users.sf.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_add_recursive_am_macro_static,  Next: ax_afs,  Prev: ax_add_recursive_am_macro,  Up: The Macros

ax_add_recursive_am_macro_static
================================

Synopsis
********

     AX_ADD_RECURSIVE_AM_MACRO_STATIC([TARGET],[RULE])

Description
***********

Adds the specified rule to AMINCLUDE_STATIC along with a
TARGET-recursive rule that will call TARGET for the current directory
and TARGET-am recursively for each subdirectory.

Source Code
***********

Download the latest version of 'ax_add_recursive_am_macro_static.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_add_recursive_am_macro_static.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_add_recursive_am_macro_static.m4).

License
*******

Copyright (C) 2009 Tom Howard <tomhoward@users.sf.net>
Copyright (C) 2009 Allan Caffee <allan.caffee@gmail.com>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_afs,  Next: ax_am_jobserver,  Prev: ax_add_recursive_am_macro_static,  Up: The Macros

ax_afs
======

Synopsis
********

     AX_AFS

Description
***********

This sets up the proper includes and libs needed for building programs
that link with AFS. It adds a -with-afsdir option that lets you specify
where the AFS includes and libs are (defaulting to /usr/afsws).

It also adds the -I and -L options to CPPFLAGS and LDFLAGS

It creates an AC_SUBST(AFSWS) that contains the directory being used.

It checks for -lBSD, -lsocket and -lnsl since AFS needs those if they
exist.  It also adds -R/usr/ucblib -L/usr/ucblib -lucb if on Solaris.

It sets VICE_ETC_PATH to be the directory where /usr/vice/etc lives,
since AFS 3.4 uses a different define than AFS 3.5 does for that path.

Finally, it defines AFS_int32 to be the in32 type needed.  In older
versions of afs it was 'int32', and in newer versions it's 'afs_int32'.

Source Code
***********

Download the latest version of 'ax_afs.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_afs.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_afs.m4).

License
*******

Copyright (C) 2008 Scott Grosch <Scott.Grosch@intel.com>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_am_jobserver,  Next: ax_am_macros,  Prev: ax_afs,  Up: The Macros

ax_am_jobserver
===============

Synopsis
********

     AX_AM_JOBSERVER([default_value])

Description
***********

Enables the use of make's jobserver for the purpose of parallel building
by passing the -j option to make.

The option -enable-jobserver is added to configure which can accept a
yes, no, or an integer.  The integer is the number of separate jobs to
allow.  If 'yes' is given, then the is assumed to be one more than the
number of CPUs (determined through AX_COUNT_CPUS). If the value of no is
given, then the jobserver is disabled.  The default value is given by
the first argument of the macro, or 'yes' if the argument is omitted.

This macro makes use of AX_AM_MACROS, so you must add the following line

       @INC_AMINCLUDE@

to your Makefile.am files.

Source Code
***********

Download the latest version of 'ax_am_jobserver.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_am_jobserver.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_am_jobserver.m4).

License
*******

Copyright (C) 2008 Michael Paul Bailey <jinxidoru@byu.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_am_macros,  Next: ax_am_macros_static,  Prev: ax_am_jobserver,  Up: The Macros

ax_am_macros
============

Synopsis
********

     AX_AM_MACROS

Description
***********

Adds support for macros that create Make rules.  You must manually add
the following line

       @INC_AMINCLUDE@

to your Makefile.in (or Makefile.am if you use Automake) files.

Source Code
***********

Download the latest version of 'ax_am_macros.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_am_macros.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_am_macros.m4).

License
*******

Copyright (C) 2009 Tom Howard <tomhoward@users.sf.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_am_macros_static,  Next: ax_am_override_var,  Prev: ax_am_macros,  Up: The Macros

ax_am_macros_static
===================

Synopsis
********

     AX_AM_MACROS_STATIC

Description
***********

Adds support for macros that create Automake rules.  You must manually
add the following line

       include $(top_srcdir)/aminclude_static.am

to your Makefile.am files.

Source Code
***********

Download the latest version of 'ax_am_macros_static.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_am_macros_static.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_am_macros_static.m4).

License
*******

Copyright (C) 2009 Tom Howard <tomhoward@users.sf.net>
Copyright (C) 2009 Allan Caffee <allan.caffee@gmail.com>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_am_override_var,  Next: ax_append_compile_flags,  Prev: ax_am_macros_static,  Up: The Macros

ax_am_override_var
==================

Synopsis
********

     AX_AM_OVERRIDE_VAR([varname1 varname ... ])
     AX_AM_OVERRIDE_FINALIZE

Description
***********

This autoconf macro generalizes the approach given in
<http://lists.gnu.org/archive/html/automake/2005-09/msg00108.html> which
moves user specified values for variable 'varname' given at configure
time into the corresponding AM_${varname} variable and clears out
'varname', allowing further manipulation by the configure script so that
target specific variables can be given specialized versions.  'varname
may still be specified on the make command line and will be appended as
usual.

As an example usage, consider a project which might benefit from
different compiler flags for different components.  Typically this is
done via target specific flags, e.g.

      libgtest_la_CXXFLAGS    =                        \
                       -I $(top_srcdir)/tests          \
                       -I $(top_builddir)/tests        \
                       $(GTEST_CXXFLAGS)

automake will automatically append $(CXXFLAGS) - provided by the user -
to the build rule for libgtest_la.  That might be problematic, as
CXXFLAGS may contain compiler options which are inappropriate for
libgtest_la.

The approach laid out in the referenced mailing list message is to
supply a base value for a variable during _configure_ time, during which
it is possible to amend it for specific targets.  The user may
subsequently specify a value for the variable during _build_ time, which
make will apply (via the standard automake rules) to all appropriate
targets.

For example,

      AX_AM_OVERRIDE_VAR([CXXFLAGS])

will store the value of CXXFLAGS specified at configure time into the
AM_CXXFLAGS variable, AC_SUBST it, and clear CXXFLAGS. configure may
then create a target specific set of flags based upon AM_CXXFLAGS, e.g.

      # googletest uses variadic macros, which g++ -pedantic-errors
      # is very unhappy about
      AC_SUBST([GTEST_CXXFLAGS],
         [`AS_ECHO_N(["$AM_CXXFLAGS"]) \
               | sed s/-pedantic-errors/-pedantic/`
          ]
       )

which would be used in a Makefile.am as above.  Since CXXFLAGS is
cleared, the configure time value will not affect the build for
libgtest_la.

Prior to _any other command_ which may set ${varname}, call

      AX_AM_OVERRIDE_VAR([varname])

This will preserve the value (if any) passed to configure in
AM_${varname} and AC_SUBST([AM_${varname}).  You may pass a space
separated list of variable names, or may call AX_AM_OVERRIDE_VAR
multiple times for the same effect.

If any subsequent configure commands set ${varname} and you wish to
capture the resultant value into AM_${varname} in the case where
${varname} was _not_ provided at configure time, call

      AX_AM_OVERRIDE_FINALIZE

after _all_ commands which might affect any of the variables specified
in calls to AX_AM_OVERRIDE_VAR. This need be done only once, but
repeated calls will not cause harm.

There is a bit of trickery required to allow further manipulation of the
AM_${varname} in a Makefile.am file.  If AM_CFLAGS is used as is in a
Makefile.am, e.g.

      libfoo_la_CFLAGS = $(AM_CFLAGS)

then automake will emit code in Makefile.in which sets AM_CFLAGS from
the configure'd value.

If however, AM_CFLAGS is manipulated (i.e.  appended to), you will have
to explicitly arrange for the configure'd value to be substituted:

      AM_CFLAGS = @AM_CFLAGS@
      AM_CFLAGS += -lfoo

or else automake will complain about using += before =.

Source Code
***********

Download the latest version of 'ax_am_override_var.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_am_override_var.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_am_override_var.m4).

License
*******

Copyright (C) 2013 Smithsonian Astrophysical Observatory
Copyright (C) 2013 Diab Jerius <djerius@cfa.harvard.edu>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_append_compile_flags,  Next: ax_append_flag,  Prev: ax_am_override_var,  Up: The Macros

ax_append_compile_flags
=======================

Synopsis
********

     AX_APPEND_COMPILE_FLAGS([FLAG1 FLAG2 ...], [FLAGS-VARIABLE], [EXTRA-FLAGS], [INPUT])

Description
***********

For every FLAG1, FLAG2 it is checked whether the compiler works with the
flag.  If it does, the flag is added FLAGS-VARIABLE

If FLAGS-VARIABLE is not specified, the current language's flags (e.g.
CFLAGS) is used.  During the check the flag is always added to the
current language's flags.

If EXTRA-FLAGS is defined, it is added to the current language's default
flags (e.g.  CFLAGS) when the check is done.  The check is thus made
with the flags: "CFLAGS EXTRA-FLAGS FLAG". This can for example be used
to force the compiler to issue an error when a bad flag is given.

INPUT gives an alternative input source to AC_COMPILE_IFELSE.

NOTE: This macro depends on the AX_APPEND_FLAG and
AX_CHECK_COMPILE_FLAG. Please keep this macro in sync with
AX_APPEND_LINK_FLAGS.

Source Code
***********

Download the latest version of 'ax_append_compile_flags.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_append_compile_flags.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_append_compile_flags.m4).

License
*******

Copyright (C) 2011 Maarten Bosmans <mkbosmans@gmail.com>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_append_flag,  Next: ax_append_link_flags,  Prev: ax_append_compile_flags,  Up: The Macros

ax_append_flag
==============

Synopsis
********

     AX_APPEND_FLAG(FLAG, [FLAGS-VARIABLE])

Description
***********

FLAG is appended to the FLAGS-VARIABLE shell variable, with a space
added in between.

If FLAGS-VARIABLE is not specified, the current language's flags (e.g.
CFLAGS) is used.  FLAGS-VARIABLE is not changed if it already contains
FLAG. If FLAGS-VARIABLE is unset in the shell, it is set to exactly
FLAG.

NOTE: Implementation based on AX_CFLAGS_GCC_OPTION.

Source Code
***********

Download the latest version of 'ax_append_flag.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_append_flag.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_append_flag.m4).

License
*******

Copyright (C) 2008 Guido U. Draheim <guidod@gmx.de>
Copyright (C) 2011 Maarten Bosmans <mkbosmans@gmail.com>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_append_link_flags,  Next: ax_append_to_file,  Prev: ax_append_flag,  Up: The Macros

ax_append_link_flags
====================

Synopsis
********

     AX_APPEND_LINK_FLAGS([FLAG1 FLAG2 ...], [FLAGS-VARIABLE], [EXTRA-FLAGS], [INPUT])

Description
***********

For every FLAG1, FLAG2 it is checked whether the linker works with the
flag.  If it does, the flag is added FLAGS-VARIABLE

If FLAGS-VARIABLE is not specified, the linker's flags (LDFLAGS) is
used.  During the check the flag is always added to the linker's flags.

If EXTRA-FLAGS is defined, it is added to the linker's default flags
when the check is done.  The check is thus made with the flags: "LDFLAGS
EXTRA-FLAGS FLAG". This can for example be used to force the linker to
issue an error when a bad flag is given.

INPUT gives an alternative input source to AC_COMPILE_IFELSE.

NOTE: This macro depends on the AX_APPEND_FLAG and AX_CHECK_LINK_FLAG.
Please keep this macro in sync with AX_APPEND_COMPILE_FLAGS.

Source Code
***********

Download the latest version of 'ax_append_link_flags.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_append_link_flags.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_append_link_flags.m4).

License
*******

Copyright (C) 2011 Maarten Bosmans <mkbosmans@gmail.com>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_append_to_file,  Next: ax_arg_with_path_style,  Prev: ax_append_link_flags,  Up: The Macros

ax_append_to_file
=================

Synopsis
********

     AX_APPEND_TO_FILE([FILE],[DATA])

Description
***********

Appends the specified data to the specified file.

Source Code
***********

Download the latest version of 'ax_append_to_file.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_append_to_file.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_append_to_file.m4).

License
*******

Copyright (C) 2008 Tom Howard <tomhoward@users.sf.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_arg_with_path_style,  Next: ax_asm_inline,  Prev: ax_append_to_file,  Up: The Macros

ax_arg_with_path_style
======================

Synopsis
********

     AX_ARG_WITH_PATH_STYLE

Description
***********

_AC_DEFINE(PATH_STYLE) describing the filesys interface.  The value is
numeric, where the basetype is encoded as 16 = dos/win, 32 = unix, 64 =
url/www, 0 = other

some extra semantics are described in other bits of the value,
especially

      1024  accepts "/" as a dir separator
      2048  accepts ";" as a path separator
      4096  accepts "," as a path separator

the macro provides a configure' -with-path-style option that can be used
with descriptive arg names.  If not explicitly given, the $target_os
will be checked to provide a sane default.  Additional (lower) bits can
be used by the user for some additional magic, higher bits are reserved
for this macro.

the mnemonic "strict" or "also" is used to instruct the code that
additional separators shall be accepted but converted to the separator
of the underlying pathstyle system.  (or-512)

      example: --with-path-style=win,slash
               to make it accept ";" as pathsep, and
               both "/" and "\" as dirseps.

Source Code
***********

Download the latest version of 'ax_arg_with_path_style.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_arg_with_path_style.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_arg_with_path_style.m4).

License
*******

Copyright (C) 2008 Guido U. Draheim <guidod@gmx.de>

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 3 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <https://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro.  You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them.  The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive.  When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.


File: autoconf-archive.info,  Node: ax_asm_inline,  Next: ax_at_check_pattern,  Prev: ax_arg_with_path_style,  Up: The Macros

ax_asm_inline
=============

Synopsis
********

     AX_ASM_INLINE()

Description
***********

Tests for C compiler support of inline assembly instructions.  If inline
assembly is supported, this macro #defines ASM_INLINE to be the
appropriate keyword.

Source Code
***********

Download the latest version of 'ax_asm_inline.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_asm_inline.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_asm_inline.m4).

License
*******

Copyright (C) 2008 Alan Woodland <ajw05@aber.ac.uk>
Copyright (C) 2009 Rhys Ulerich <rhys.ulerich@gmail.com>
Copyright (C) 2017 Reini Urban <rurban@cpan.org>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_at_check_pattern,  Next: ax_auto_include_headers,  Prev: ax_asm_inline,  Up: The Macros

ax_at_check_pattern
===================

Synopsis
********

     AX_AT_CHECK_PATTERN(COMMANDS, [STATUS], [STDOUT-RE], [STDERR-RE], [RUN-IF-FAIL], [RUN-IF-PASS])
     AX_AT_DIFF_PATTERN(PATTERN-FILE, TEST-FILE, [STATUS=0], [DIFFERENCES])

Description
***********

AX_AT_CHECK_PATTERN() executes a test similar to AT_CHECK(), except that
stdout and stderr are awk regular expressions (REs).

NOTE: as autoconf uses [] for quoting, the use of [brackets] in the RE
arguments STDOUT-RE and STDERR-RE can be awkward and require careful
extra quoting, or quadrigraphs '@<:@' (for '[') and '@:>@' (for ']').

awk is invoked via $AWK, which defaults to "awk" if unset or empty.

Implemented using AT_CHECK() with a custom value for $at_diff that
invokes diff with an awk post-processor.

AX_AT_DIFF_PATTERN() checks that the PATTERN-FILE applies to TEST-FILE.
If there are differences, STATUS will be 1 and they should be
DIFFERENCES.

Source Code
***********

Download the latest version of 'ax_at_check_pattern.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_at_check_pattern.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_at_check_pattern.m4).

License
*******

Copyright (C) 2013-2014 Luke Mewburn <luke@mewburn.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_auto_include_headers,  Next: ax_berkeley_db,  Prev: ax_at_check_pattern,  Up: The Macros

ax_auto_include_headers
=======================

Synopsis
********

     AX_AUTO_INCLUDE_HEADERS(INCLUDE-FILE ...)

Description
***********

Given a space-separated list of INCLUDE-FILEs, AX_AUTO_INCLUDE_HEADERS
will output a conditional #include for each INCLUDE-FILE. The following
example demonstrates how AX_AUTO_INCLUDE_HEADERS's might be used in a
configure.ac script:

       AH_BOTTOM([
         AX_AUTO_INCLUDE_HEADERS([sys/resource.h invent.h sys/sysinfo.h])dnl
       ])

The preceding invocation instructs autoheader to put the following code
at the bottom of the config.h file:

       #ifdef HAVE_SYS_RESOURCE_H
       # include <sys/resource.h>
       #endif
       #ifdef HAVE_INVENT_H
       # include <invent.h>
       #endif
       #ifdef HAVE_SYS_SYSINFO_H
       # include <sys/sysinfo.h>
       #endif

Note that AX_AUTO_INCLUDE_HEADERS merely outputs #ifdef/#include/#endif
blocks.  The configure.ac script still needs to invoke AC_CHECK_HEADERS
to #define the various HAVE_*_H preprocessor macros.

Here's an easy way to get from config.h a complete list of header files
who existence is tested by the configure script:

       cat config.h | perl -ane '/ HAVE_\S+_H / && do {$_=$F[$#F-1]; s/^HAVE_//; s/_H/.h/; s|_|/|g; tr/A-Z/a-z/; print "$_ "}'

You can then manually edit the resulting list and incorporate it into
one or more calls to AX_AUTO_INCLUDE_HEADERS.

Source Code
***********

Download the latest version of 'ax_auto_include_headers.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_auto_include_headers.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_auto_include_headers.m4).

License
*******

Copyright (C) 2008 Scott Pakin <pakin@uiuc.edu>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_berkeley_db,  Next: ax_berkeley_db_cxx,  Prev: ax_auto_include_headers,  Up: The Macros

ax_berkeley_db
==============

Synopsis
********

     AX_BERKELEY_DB([MINIMUM-VERSION [, ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND]]])

Description
***********

This macro tries to find Berkeley DB. It honors MINIMUM-VERSION if
given.

If libdb is found, DB_HEADER and DB_LIBS variables are set and
ACTION-IF-FOUND shell code is executed if specified.  DB_HEADER is set
to location of db.h header in quotes (e.g.  "db3/db.h") and
AC_DEFINE_UNQUOTED is called on it, so that you can type

       #include DB_HEADER

in your C/C++ code.  DB_LIBS is set to linker flags needed to link
against the library (e.g.  -ldb3.1) and AC_SUBST is called on it.

when specified user-selected spot (via -with-libdb) also sets

       DB_CPPFLAGS to the include directives required
       DB_LDFLAGS to the -L flags required

Source Code
***********

Download the latest version of 'ax_berkeley_db.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_berkeley_db.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_berkeley_db.m4).

License
*******

Copyright (C) 2008 Vaclav Slavik <vaclav.slavik@matfyz.cz>
Copyright (C) 2014 Kirill A. Korinskiy <catap@catap.ru>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_berkeley_db_cxx,  Next: ax_blas,  Prev: ax_berkeley_db,  Up: The Macros

ax_berkeley_db_cxx
==================

Synopsis
********

     AX_BERKELEY_DB_CXX([MINIMUM-VERSION [, ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND]]])

Description
***********

This macro tries to find Berkeley DB C++ support.  It honors
MINIMUM-VERSION if given.

If libdb_cxx is found, DB_CXX_HEADER and DB_CXX_LIBS variables are set
and ACTION-IF-FOUND shell code is executed if specified.  DB_CXX_HEADER
is set to location of db.h header in quotes (e.g.  "db3/db_cxx.h") and
AC_DEFINE_UNQUOTED is called on it, so that you can type

       #include DB_CXX_HEADER

in your C/C++ code.  DB_CXX_LIBS is set to linker flags needed to link
against the library (e.g.  -ldb3.1_cxx) and AC_SUBST is called on it.

when specified user-selected spot (via -with-libdb) also sets

       DB_CXX_CPPFLAGS to the include directives required
       DB_CXX_LDFLAGS to the -L flags required

Source Code
***********

Download the latest version of 'ax_berkeley_db_cxx.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_berkeley_db_cxx.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_berkeley_db_cxx.m4).

License
*******

Copyright (C) 2008 Vaclav Slavik <vaclav.slavik@matfyz.cz>
Copyright (C) 2011 Stephan Suerken <absurd@debian.org>
Copyright (C) 2014 Kirill A. Korinskiy <catap@catap.ru>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_blas,  Next: ax_blas_f77_func,  Prev: ax_berkeley_db_cxx,  Up: The Macros

ax_blas
=======

Synopsis
********

     AX_BLAS([ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]])

Description
***********

This macro looks for a library that implements the BLAS linear-algebra
interface (see http://www.netlib.org/blas/).  On success, it sets the
BLAS_LIBS output variable to hold the requisite library linkages.

To link with BLAS, you should link with:

       $BLAS_LIBS $LIBS $FLIBS

in that order.  FLIBS is the output variable of the
AC_F77_LIBRARY_LDFLAGS macro (called if necessary by AX_BLAS), and is
sometimes necessary in order to link with F77 libraries.  Users will
also need to use AC_F77_DUMMY_MAIN (see the autoconf manual), for the
same reason.

Many libraries are searched for, from ATLAS to CXML to ESSL. The user
may also use -with-blas=<lib> in order to use some specific BLAS library
<lib>.  In order to link successfully, however, be aware that you will
probably need to use the same Fortran compiler (which can be set via the
F77 env.  var.)  as was used to compile the BLAS library.

ACTION-IF-FOUND is a list of shell commands to run if a BLAS library is
found, and ACTION-IF-NOT-FOUND is a list of commands to run it if it is
not found.  If ACTION-IF-FOUND is not specified, the default action will
define HAVE_BLAS.

Source Code
***********

Download the latest version of 'ax_blas.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_blas.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_blas.m4).

License
*******

Copyright (C) 2008 Steven G. Johnson <stevenj@alum.mit.edu>
Copyright (C) 2019 Geoffrey M. Oxberry <goxberry@gmail.com>

This program is free software: you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation, either version 3 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <https://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro.  You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them.  The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive.  When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.


File: autoconf-archive.info,  Node: ax_blas_f77_func,  Next: ax_boost_asio,  Prev: ax_blas,  Up: The Macros

ax_blas_f77_func
================

Synopsis
********

     AX_BLAS_F77_FUNC([ACTION-IF-PASS[, ACTION-IF-FAIL[, ACTION-IF-CROSS-COMPILING]])
     AX_BLAS_WITH_F77_FUNC([ACTION-IF-FOUND-AND-PASS[, ACTION-IF-NOT-FOUND-OR-FAIL]])

Description
***********

These macros are intended as a supplement to the AX_BLAS macro, to
verify that BLAS functions are properly callable from Fortran.  This is
necessary, for example, if you want to build the LAPACK library on top
of the BLAS.

AX_BLAS_F77_FUNC uses the defined BLAS_LIBS and Fortran environment to
check for compatibility, and takes a specific action in case of success,
resp.  failure, resp.  cross-compilation.

AX_BLAS_WITH_F77_FUNC is a drop-in replacement wrapper for AX_BLAS that
calls AX_BLAS_F77_FUNC after detecting a BLAS library and rejects it on
failure (i.e.  pretends that no library was found).

Source Code
***********

Download the latest version of 'ax_blas_f77_func.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_blas_f77_func.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_blas_f77_func.m4).

License
*******

Copyright (C) 2008 Jaroslav Hajek <highegg@gmail.com>

This program is free software: you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation, either version 3 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <https://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro.  You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them.  The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive.  When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.


File: autoconf-archive.info,  Node: ax_boost_asio,  Next: ax_boost_atomic,  Prev: ax_blas_f77_func,  Up: The Macros

ax_boost_asio
=============

Synopsis
********

     AX_BOOST_ASIO

Description
***********

Test for Asio library from the Boost C++ libraries.  The macro requires
a preceding call to AX_BOOST_BASE. Further documentation is available at
<http://randspringer.de/boost/index.html>.

This macro calls:

       AC_SUBST(BOOST_ASIO_LIB)

And sets:

       HAVE_BOOST_ASIO

Source Code
***********

Download the latest version of 'ax_boost_asio.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_boost_asio.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_boost_asio.m4).

License
*******

Copyright (C) 2008 Thomas Porschberg <thomas@randspringer.de>
Copyright (C) 2008 Pete Greenwell <pete@mu.org>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_boost_atomic,  Next: ax_boost_base,  Prev: ax_boost_asio,  Up: The Macros

ax_boost_atomic
===============

Synopsis
********

     AX_BOOST_ATOMIC

Description
***********

Test for the Atomic library from the Boost C++ libraries.  The macro
requires a preceding call to AX_BOOST_BASE. Further documentation is
available at <http://randspringer.de/boost/index.html>.

This macro calls:

       AC_SUBST(BOOST_ATOMIC_LIB)

And sets:

       HAVE_BOOST_ATOMIC

Source Code
***********

Download the latest version of 'ax_boost_atomic.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_boost_atomic.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_boost_atomic.m4).

License
*******

Copyright (C) 2008 Thomas Porschberg <thomas@randspringer.de>
Copyright (C) 2008 Michael Tindal
Copyright (C) 2013 Daniel Casimiro <dan.casimiro@gmail.com>
Copyright (C) 2021 Richard Winters <kirvedx@gmail.com>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_boost_base,  Next: ax_boost_chrono,  Prev: ax_boost_atomic,  Up: The Macros

ax_boost_base
=============

Synopsis
********

     AX_BOOST_BASE([MINIMUM-VERSION], [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])

Description
***********

Test for the Boost C++ libraries of a particular version (or newer)

If no path to the installed boost library is given the macro searchs
under /usr, /usr/local, /opt, /opt/local and /opt/homebrew and evaluates
the $BOOST_ROOT environment variable.  Further documentation is
available at <http://randspringer.de/boost/index.html>.

This macro calls:

       AC_SUBST(BOOST_CPPFLAGS) / AC_SUBST(BOOST_LDFLAGS)

And sets:

       HAVE_BOOST

Source Code
***********

Download the latest version of 'ax_boost_base.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_boost_base.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_boost_base.m4).

License
*******

Copyright (C) 2008 Thomas Porschberg <thomas@randspringer.de>
Copyright (C) 2009 Peter Adolphs

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_boost_chrono,  Next: ax_boost_context,  Prev: ax_boost_base,  Up: The Macros

ax_boost_chrono
===============

Synopsis
********

     AX_BOOST_CHRONO

Description
***********

Test for Chrono library from the Boost C++ libraries.  The macro
requires a preceding call to AX_BOOST_BASE. Further documentation is
available at <http://randspringer.de/boost/index.html>.

This macro calls:

       AC_SUBST(BOOST_CHRONO_LIB)

And sets:

       HAVE_BOOST_CHRONO

Source Code
***********

Download the latest version of 'ax_boost_chrono.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_boost_chrono.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_boost_chrono.m4).

License
*******

Copyright (C) 2012 Xiyue Deng <manphiz@gmail.com>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_boost_context,  Next: ax_boost_coroutine,  Prev: ax_boost_chrono,  Up: The Macros

ax_boost_context
================

Synopsis
********

     AX_BOOST_CONTEXT

Description
***********

Test for Context library from the Boost C++ libraries.  The macro
requires a preceding call to AX_BOOST_BASE. Further documentation is
available at <http://randspringer.de/boost/index.html>.

This macro calls:

       AC_SUBST(BOOST_CONTEXT_LIB)

And sets:

       HAVE_BOOST_CONTEXT

Source Code
***********

Download the latest version of 'ax_boost_context.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_boost_context.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_boost_context.m4).

License
*******

Copyright (C) 2008 Thomas Porschberg <thomas@randspringer.de>
Copyright (C) 2008 Michael Tindal
Copyright (C) 2013 Daniel Casimiro <dan.casimiro@gmail.com>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_boost_coroutine,  Next: ax_boost_date_time,  Prev: ax_boost_context,  Up: The Macros

ax_boost_coroutine
==================

Synopsis
********

     AX_BOOST_COROUTINE

Description
***********

Test for Coroutine library from the Boost C++ libraries.  The macro
requires a preceding call to AX_BOOST_BASE. Further documentation is
available at <http://randspringer.de/boost/index.html>.

This macro calls:

       AC_SUBST(BOOST_COROUTINE_LIB)

And sets:

       HAVE_BOOST_COROUTINE

Source Code
***********

Download the latest version of 'ax_boost_coroutine.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_boost_coroutine.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_boost_coroutine.m4).

License
*******

Copyright (C) 2008 Thomas Porschberg <thomas@randspringer.de>
Copyright (C) 2008 Michael Tindal
Copyright (C) 2013 Daniel Casimiro <dan.casimiro@gmail.com>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_boost_date_time,  Next: ax_boost_filesystem,  Prev: ax_boost_coroutine,  Up: The Macros

ax_boost_date_time
==================

Synopsis
********

     AX_BOOST_DATE_TIME

Description
***********

Test for Date_Time library from the Boost C++ libraries.  The macro
requires a preceding call to AX_BOOST_BASE. Further documentation is
available at <http://randspringer.de/boost/index.html>.

This macro calls:

       AC_SUBST(BOOST_DATE_TIME_LIB)

And sets:

       HAVE_BOOST_DATE_TIME

Source Code
***********

Download the latest version of 'ax_boost_date_time.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_boost_date_time.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_boost_date_time.m4).

License
*******

Copyright (C) 2008 Thomas Porschberg <thomas@randspringer.de>
Copyright (C) 2008 Michael Tindal

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_boost_filesystem,  Next: ax_boost_iostreams,  Prev: ax_boost_date_time,  Up: The Macros

ax_boost_filesystem
===================

Synopsis
********

     AX_BOOST_FILESYSTEM

Description
***********

Test for Filesystem library from the Boost C++ libraries.  The macro
requires a preceding call to AX_BOOST_BASE. Further documentation is
available at <http://randspringer.de/boost/index.html>.

This macro calls:

       AC_SUBST(BOOST_FILESYSTEM_LIB)

And sets:

       HAVE_BOOST_FILESYSTEM

Source Code
***********

Download the latest version of 'ax_boost_filesystem.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_boost_filesystem.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_boost_filesystem.m4).

License
*******

Copyright (C) 2009 Thomas Porschberg <thomas@randspringer.de>
Copyright (C) 2009 Michael Tindal
Copyright (C) 2009 Roman Rybalko <libtorrent@romanr.info>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_boost_iostreams,  Next: ax_boost_json,  Prev: ax_boost_filesystem,  Up: The Macros

ax_boost_iostreams
==================

Synopsis
********

     AX_BOOST_IOSTREAMS

Description
***********

Test for IOStreams library from the Boost C++ libraries.  The macro
requires a preceding call to AX_BOOST_BASE. Further documentation is
available at <http://randspringer.de/boost/index.html>.

This macro calls:

       AC_SUBST(BOOST_IOSTREAMS_LIB)

And sets:

       HAVE_BOOST_IOSTREAMS

Source Code
***********

Download the latest version of 'ax_boost_iostreams.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_boost_iostreams.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_boost_iostreams.m4).

License
*******

Copyright (C) 2008 Thomas Porschberg <thomas@randspringer.de>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_boost_json,  Next: ax_boost_locale,  Prev: ax_boost_iostreams,  Up: The Macros

ax_boost_json
=============

Synopsis
********

     AX_BOOST_JSON

Description
***********

Test for the JSON library from the Boost C++ libraries.  The macro
requires a preceding call to AX_BOOST_BASE. Further documentation is
available at <http://randspringer.de/boost/index.html>.

This macro calls:

       AC_SUBST(BOOST_JSON_LIB)

And sets:

       HAVE_BOOST_JSON

Source Code
***********

Download the latest version of 'ax_boost_json.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_boost_json.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_boost_json.m4).

License
*******

Copyright (C) 2008 Thomas Porschberg <thomas@randspringer.de>
Copyright (C) 2008 Michael Tindal
Copyright (C) 2013 Daniel Casimiro <dan.casimiro@gmail.com>
Copyright (C) 2021 Richard Winters <kirvedx@gmail.com>
Copyright (C) 2022 Luke Mewburn <Luke@Mewburn.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_boost_locale,  Next: ax_boost_log,  Prev: ax_boost_json,  Up: The Macros

ax_boost_locale
===============

Synopsis
********

     AX_BOOST_LOCALE

Description
***********

Test for System library from the Boost C++ libraries.  The macro
requires a preceding call to AX_BOOST_BASE. Further documentation is
available at <http://randspringer.de/boost/index.html>.

This macro calls:

       AC_SUBST(BOOST_LOCALE_LIB)

And sets:

       HAVE_BOOST_LOCALE

Source Code
***********

Download the latest version of 'ax_boost_locale.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_boost_locale.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_boost_locale.m4).

License
*******

Copyright (C) 2012 Xiyue Deng <manphiz@gmail.com>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_boost_log,  Next: ax_boost_log_setup,  Prev: ax_boost_locale,  Up: The Macros

ax_boost_log
============

Synopsis
********

     AX_BOOST_LOG

Description
***********

Test for Log library from the Boost C++ libraries.  The macro requires a
preceding call to AX_BOOST_BASE. Further documentation is available at
<http://randspringer.de/boost/index.html>.

This macro calls:

       AC_SUBST(BOOST_LOG_LIB)

And sets:

       HAVE_BOOST_LOG

Source Code
***********

Download the latest version of 'ax_boost_log.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_boost_log.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_boost_log.m4).

License
*******

Copyright (C) 2008 Thomas Porschberg <thomas@randspringer.de>
Copyright (C) 2008 Michael Tindal
Copyright (C) 2013 Daniel Casimiro <dan.casimiro@gmail.com>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_boost_log_setup,  Next: ax_boost_process,  Prev: ax_boost_log,  Up: The Macros

ax_boost_log_setup
==================

Synopsis
********

     AX_BOOST_LOG_SETUP

Description
***********

Test for LogSetup library from the Boost C++ libraries.  The macro
requires a preceding call to AX_BOOST_BASE. Further documentation is
available at <http://randspringer.de/boost/index.html>.

This macro calls:

       AC_SUBST(BOOST_LOG_SETUP_LIB)

And sets:

       HAVE_BOOST_LOG_SETUP

Source Code
***********

Download the latest version of 'ax_boost_log_setup.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_boost_log_setup.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_boost_log_setup.m4).

License
*******

Copyright (C) 2008 Thomas Porschberg <thomas@randspringer.de>
Copyright (C) 2008 Michael Tindal
Copyright (C) 2013 Daniel Casimiro <dan.casimiro@gmail.com>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_boost_process,  Next: ax_boost_program_options,  Prev: ax_boost_log_setup,  Up: The Macros

ax_boost_process
================

Synopsis
********

     AX_BOOST_PROCESS

Description
***********

Test for Process library from the Boost C++ libraries.  The macro
requires a preceding call to AX_BOOST_BASE. Further documentation is
available at <http://randspringer.de/boost/index.html>.

This macro calls:

       AC_SUBST(BOOST_PROCESS_LIB)

And sets:

       HAVE_BOOST_PROCESS

Source Code
***********

Download the latest version of 'ax_boost_process.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_boost_process.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_boost_process.m4).

License
*******

Copyright (C) 2008 Thomas Porschberg <thomas@randspringer.de>
Copyright (C) 2008 Michael Tindal
Copyright (C) 2008 Daniel Casimiro <dan.casimiro@gmail.com>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_boost_program_options,  Next: ax_boost_python,  Prev: ax_boost_process,  Up: The Macros

ax_boost_program_options
========================

Synopsis
********

     AX_BOOST_PROGRAM_OPTIONS

Description
***********

Test for program options library from the Boost C++ libraries.  The
macro requires a preceding call to AX_BOOST_BASE. Further documentation
is available at <http://randspringer.de/boost/index.html>.

This macro calls:

       AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB)

And sets:

       HAVE_BOOST_PROGRAM_OPTIONS

Source Code
***********

Download the latest version of 'ax_boost_program_options.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_boost_program_options.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_boost_program_options.m4).

License
*******

Copyright (C) 2009 Thomas Porschberg <thomas@randspringer.de>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_boost_python,  Next: ax_boost_random,  Prev: ax_boost_program_options,  Up: The Macros

ax_boost_python
===============

Synopsis
********

     AX_BOOST_PYTHON

Description
***********

This macro checks to see if the Boost.Python library is installed.  It
also attempts to guess the correct library name using several attempts.
It tries to build the library name using a user supplied name or suffix
and then just the raw library.

If the library is found, HAVE_BOOST_PYTHON is defined and
BOOST_PYTHON_LIB is set to the name of the library.

This macro calls AC_SUBST(BOOST_PYTHON_LIB).

In order to ensure that the Python headers and the Boost libraries are
specified on the include path, this macro requires AX_PYTHON_DEVEL and
AX_BOOST_BASE to be called.

Source Code
***********

Download the latest version of 'ax_boost_python.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_boost_python.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_boost_python.m4).

License
*******

Copyright (C) 2008 Michael Tindal
Copyright (C) 2013 Daniel M"ullner <daniel@danifold.net>

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <https://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro.  You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them.  The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive.  When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.


File: autoconf-archive.info,  Node: ax_boost_random,  Next: ax_boost_regex,  Prev: ax_boost_python,  Up: The Macros

ax_boost_random
===============

Synopsis
********

     AX_BOOST_RANDOM

Description
***********

Test for the Random library from the Boost C++ libraries.  The macro
requires a preceding call to AX_BOOST_BASE. Further documentation is
available at <http://randspringer.de/boost/index.html>.

This macro calls:

       AC_SUBST(BOOST_RANDOM_LIB)

And sets:

       HAVE_BOOST_RANDOM

Source Code
***********

Download the latest version of 'ax_boost_random.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_boost_random.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_boost_random.m4).

License
*******

Copyright (C) 2008 Thomas Porschberg <thomas@randspringer.de>
Copyright (C) 2008 Michael Tindal
Copyright (C) 2013 Daniel Casimiro <dan.casimiro@gmail.com>
Copyright (C) 2021 Richard Winters <kirvedx@gmail.com>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_boost_regex,  Next: ax_boost_serialization,  Prev: ax_boost_random,  Up: The Macros

ax_boost_regex
==============

Synopsis
********

     AX_BOOST_REGEX

Description
***********

Test for Regex library from the Boost C++ libraries.  The macro requires
a preceding call to AX_BOOST_BASE. Further documentation is available at
<http://randspringer.de/boost/index.html>.

This macro calls:

       AC_SUBST(BOOST_REGEX_LIB)

And sets:

       HAVE_BOOST_REGEX

Source Code
***********

Download the latest version of 'ax_boost_regex.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_boost_regex.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_boost_regex.m4).

License
*******

Copyright (C) 2008 Thomas Porschberg <thomas@randspringer.de>
Copyright (C) 2008 Michael Tindal

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_boost_serialization,  Next: ax_boost_signals,  Prev: ax_boost_regex,  Up: The Macros

ax_boost_serialization
======================

Synopsis
********

     AX_BOOST_SERIALIZATION

Description
***********

Test for Serialization library from the Boost C++ libraries.  The macro
requires a preceding call to AX_BOOST_BASE. Further documentation is
available at <http://randspringer.de/boost/index.html>.

This macro calls:

       AC_SUBST(BOOST_SERIALIZATION_LIB)

And sets:

       HAVE_BOOST_SERIALIZATION

Source Code
***********

Download the latest version of 'ax_boost_serialization.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_boost_serialization.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_boost_serialization.m4).

License
*******

Copyright (C) 2008 Thomas Porschberg <thomas@randspringer.de>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_boost_signals,  Next: ax_boost_system,  Prev: ax_boost_serialization,  Up: The Macros

ax_boost_signals
================

Synopsis
********

     AX_BOOST_SIGNALS

Description
***********

Test for Signals library from the Boost C++ libraries.  The macro
requires a preceding call to AX_BOOST_BASE. Further documentation is
available at <http://randspringer.de/boost/index.html>.

This macro calls:

       AC_SUBST(BOOST_SIGNALS_LIB)

And sets:

       HAVE_BOOST_SIGNALS

Source Code
***********

Download the latest version of 'ax_boost_signals.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_boost_signals.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_boost_signals.m4).

License
*******

Copyright (C) 2008 Thomas Porschberg <thomas@randspringer.de>
Copyright (C) 2008 Michael Tindal

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_boost_system,  Next: ax_boost_test_exec_monitor,  Prev: ax_boost_signals,  Up: The Macros

ax_boost_system
===============

Synopsis
********

     AX_BOOST_SYSTEM

Description
***********

Test for System library from the Boost C++ libraries.  The macro
requires a preceding call to AX_BOOST_BASE. Further documentation is
available at <http://randspringer.de/boost/index.html>.

This macro calls:

       AC_SUBST(BOOST_SYSTEM_LIB)

And sets:

       HAVE_BOOST_SYSTEM

Source Code
***********

Download the latest version of 'ax_boost_system.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_boost_system.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_boost_system.m4).

License
*******

Copyright (C) 2008 Thomas Porschberg <thomas@randspringer.de>
Copyright (C) 2008 Michael Tindal
Copyright (C) 2008 Daniel Casimiro <dan.casimiro@gmail.com>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_boost_test_exec_monitor,  Next: ax_boost_thread,  Prev: ax_boost_system,  Up: The Macros

ax_boost_test_exec_monitor
==========================

Synopsis
********

     AX_BOOST_TEST_EXEC_MONITOR

Description
***********

Test for Test_Exec_Monitor library from the Boost C++ libraries.  The
macro requires a preceding call to AX_BOOST_BASE. Further documentation
is available at <http://randspringer.de/boost/index.html>.

This macro calls:

       AC_SUBST(BOOST_TEST_EXEC_MONITOR_LIB)

And sets:

       HAVE_BOOST_TEST_EXEC_MONITOR

Source Code
***********

Download the latest version of 'ax_boost_test_exec_monitor.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_boost_test_exec_monitor.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_boost_test_exec_monitor.m4).

License
*******

Copyright (C) 2008 Dodji Seketeli <dodji@seketeli.org>
Copyright (C) 2008 Thomas Porschberg <thomas@randspringer.de>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_boost_thread,  Next: ax_boost_unit_test_framework,  Prev: ax_boost_test_exec_monitor,  Up: The Macros

ax_boost_thread
===============

Synopsis
********

     AX_BOOST_THREAD

Description
***********

Test for Thread library from the Boost C++ libraries.  The macro
requires a preceding call to AX_BOOST_BASE. Further documentation is
available at <http://randspringer.de/boost/index.html>.

This macro calls:

       AC_SUBST(BOOST_THREAD_LIB)

And sets:

       HAVE_BOOST_THREAD

Source Code
***********

Download the latest version of 'ax_boost_thread.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_boost_thread.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_boost_thread.m4).

License
*******

Copyright (C) 2009 Thomas Porschberg <thomas@randspringer.de>
Copyright (C) 2009 Michael Tindal

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_boost_unit_test_framework,  Next: ax_boost_wave,  Prev: ax_boost_thread,  Up: The Macros

ax_boost_unit_test_framework
============================

Synopsis
********

     AX_BOOST_UNIT_TEST_FRAMEWORK

Description
***********

Test for Unit_Test_Framework library from the Boost C++ libraries.  The
macro requires a preceding call to AX_BOOST_BASE. Further documentation
is available at <http://randspringer.de/boost/index.html>.

This macro calls:

       AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)

And sets:

       HAVE_BOOST_UNIT_TEST_FRAMEWORK

Source Code
***********

Download the latest version of 'ax_boost_unit_test_framework.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_boost_unit_test_framework.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_boost_unit_test_framework.m4).

License
*******

Copyright (C) 2008 Thomas Porschberg <thomas@randspringer.de>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_boost_wave,  Next: ax_boost_wserialization,  Prev: ax_boost_unit_test_framework,  Up: The Macros

ax_boost_wave
=============

Synopsis
********

     AX_BOOST_WAVE

Description
***********

Test for Wave library from the Boost C++ libraries.  The macro requires
a preceding call to AX_BOOST_BASE. Further documentation is available at
<http://randspringer.de/boost/index.html>.

This macro calls:

       AC_SUBST(BOOST_WAVE_LIB)

And sets:

       HAVE_BOOST_WAVE

Source Code
***********

Download the latest version of 'ax_boost_wave.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_boost_wave.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_boost_wave.m4).

License
*******

Copyright (C) 2009 Thomas Porschberg <thomas@randspringer.de>
Copyright (C) 2009 Michael Tindal

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_boost_wserialization,  Next: ax_build_date_epoch,  Prev: ax_boost_wave,  Up: The Macros

ax_boost_wserialization
=======================

Synopsis
********

     AX_BOOST_WSERIALIZATION

Description
***********

Test for Serialization library from the Boost C++ libraries.  The macro
requires a preceding call to AX_BOOST_BASE. Further documentation is
available at <http://randspringer.de/boost/index.html>.

This macro calls:

       AC_SUBST(BOOST_WSERIALIZATION_LIB)

And sets:

       HAVE_BOOST_WSERIALIZATION

Source Code
***********

Download the latest version of 'ax_boost_wserialization.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_boost_wserialization.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_boost_wserialization.m4).

License
*******

Copyright (C) 2008 Thomas Porschberg <thomas@randspringer.de>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_build_date_epoch,  Next: ax_c99_inline,  Prev: ax_boost_wserialization,  Up: The Macros

ax_build_date_epoch
===================

Synopsis
********

     AX_BUILD_DATE_EPOCH(VARIABLE[, FORMAT[, ACTION-IF-FAIL]])

Description
***********

Sets VARIABLE to a string representing the current time.  It is
formatted according to FORMAT if specified, otherwise it is formatted as
the number of seconds (excluding leap seconds) since the UNIX epoch (01
Jan 1970 00:00:00 UTC).

If the SOURCE_DATE_EPOCH environment variable is set, it uses the value
of that variable instead of the current time.  See
https://reproducible-builds.org/specs/source-date-epoch).  If
SOURCE_DATE_EPOCH is set but cannot be properly interpreted as a UNIX
timestamp, then execute ACTION-IF-FAIL if specified, otherwise error.

VARIABLE is AC_SUBST-ed.

Source Code
***********

Download the latest version of 'ax_build_date_epoch.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_build_date_epoch.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_build_date_epoch.m4).

License
*******

Copyright (C) 2016 Eric Bavier <bavier@member.fsf.org>

This program is free software: you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation, either version 3 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <https://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro.  You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them.  The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive.  When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.


File: autoconf-archive.info,  Node: ax_c99_inline,  Next: ax_c___attribute__,  Prev: ax_build_date_epoch,  Up: The Macros

ax_c99_inline
=============

Synopsis
********

     AX_C99_INLINE

Description
***********

This macro defines HAVE_C99_INLINE if the C compiler supports "inline"
and "extern inline" correctly.  An application may replace "inline" with
"static inline" as a workaround for older compilers.

Source Code
***********

Download the latest version of 'ax_c99_inline.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_c99_inline.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_c99_inline.m4).

License
*******

Copyright (C) 2009 Michael McMaster <email@michaelmcmaster.name>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_c___attribute__,  Next: ax_c_arithmetic_rshift,  Prev: ax_c99_inline,  Up: The Macros

ax_c___attribute__
==================

Synopsis
********

     AX_C___ATTRIBUTE__

Description
***********

Provides a test for the compiler support of __attribute__ extensions.
Defines HAVE___ATTRIBUTE__ if it is found.

Source Code
***********

Download the latest version of 'ax_c___attribute__.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_c___attribute__.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_c___attribute__.m4).

License
*******

Copyright (C) 2008 Stepan Kasal <skasal@redhat.com>
Copyright (C) 2008 Christian Haggstrom
Copyright (C) 2008 Ryan McCabe <ryan@numb.org>

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <https://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro.  You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them.  The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive.  When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.


File: autoconf-archive.info,  Node: ax_c_arithmetic_rshift,  Next: ax_c_compile_value,  Prev: ax_c___attribute__,  Up: The Macros

ax_c_arithmetic_rshift
======================

Synopsis
********

     AX_C_ARITHMETIC_RSHIFT

Description
***********

Checks if the right shift operation is arithmetic.

This macro uses compile-time detection and so is cross-compile ready.

Source Code
***********

Download the latest version of 'ax_c_arithmetic_rshift.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_c_arithmetic_rshift.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_c_arithmetic_rshift.m4).

License
*******

Copyright (C) 2008 YAMAMOTO Kengo <yamaken@bp.iij4u.or.jp>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_c_compile_value,  Next: ax_c_declare_block,  Prev: ax_c_arithmetic_rshift,  Up: The Macros

ax_c_compile_value
==================

Synopsis
********

     AX_C_COMPILE_VALUE (COMPILE-VALUE, ALIAS, INCLUDES)

Description
***********

The AX_C_COMPILE_VALUE macro determines a compile time value by
generating the object code and reading the value from the code.  Static
data initializers like sizeof(int) are unavailable to preprocessor.  The
macro calculates the values known to compiler's static initializer.

Assumptions: The sought value should not exceed 65535.  The shell
interpreter and the sed utility are expected to exist and work similarly
across possible build platforms.

Result: The resulting configure script will generate the preprocessor
symbol definition:

       #define COMPILE_VALUE_<ALIAS> <NUMBER>

It was important that the value was embedded into the object file in a
predefined byte order during the test.  This ensured that the result was
independent from the target platform's byte order.

The existing AC_CHECK_SIZEOF macro also computes the size of the given
type without running the test program.  However, the existing macro will
produce a piece of configure script that will take the time proportional
to the logarithm of the sought value.

Example of use in configure.in:

       AX_C_COMPILE_VALUE(sizeof(int), sizeof_int)
       AX_C_COMPILE_VALUE([sizeof(int[[543]])], sizeof_int543)

As a result of running the generated configure script, the following
definition will appear in config.h:

       #define COMPILE_VALUE_SIZEOF_INT 4
       #define COMPILE_VALUE_SIZEOF_INT543 2172

Source Code
***********

Download the latest version of 'ax_c_compile_value.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_c_compile_value.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_c_compile_value.m4).

License
*******

Copyright (C) 2008 Ilguiz Latypov

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <https://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro.  You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them.  The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive.  When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.


File: autoconf-archive.info,  Node: ax_c_declare_block,  Next: ax_c_float_words_bigendian,  Prev: ax_c_compile_value,  Up: The Macros

ax_c_declare_block
==================

Synopsis
********

     AX_C_DECLARE_BLOCK

Description
***********

The macro will compile a test program to see whether the compiler does
allow new variable declarations in the middle of a C statement block,
i.e.  after some non-declaration line.  New compilers will allow that
which makes the behave a bit more like C++ - the gcc did support it for
quite a time already.

#define DECLARE_BLOCK_NEEDED says they need to be at the beginning of of
a statement block.  Additionally two defines DECLARE_BLOCK { and
DECLARE_END } are being set.  That makes it possible to do the following
in your source code (which this macro is really made up for):

      #define ___ DECLARE_BLOCK
      #define ____ DECLARE_END

      int f() {
       char buffer[1024];
       fgets(buffer, 1024, stdin);
       ___ int i; int ii = strlen(buffer);
       for (i=0; i < ii; i++) {
          fputc(buffer[i], stdout);
       }____;
      }

Source Code
***********

Download the latest version of 'ax_c_declare_block.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_c_declare_block.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_c_declare_block.m4).

License
*******

Copyright (C) 2008 Guido U. Draheim <guidod@gmx.de>

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 3 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <https://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro.  You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them.  The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive.  When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.


File: autoconf-archive.info,  Node: ax_c_float_words_bigendian,  Next: ax_c_long_long,  Prev: ax_c_declare_block,  Up: The Macros

ax_c_float_words_bigendian
==========================

Synopsis
********

     AX_C_FLOAT_WORDS_BIGENDIAN([ACTION-IF-TRUE], [ACTION-IF-FALSE], [ACTION-IF-UNKNOWN])

Description
***********

Checks the ordering of words within a multi-word float.  This check is
necessary because on some systems (e.g.  certain ARM systems), the float
word ordering can be different from the byte ordering.  In a multi-word
float context, "big-endian" implies that the word containing the sign
bit is found in the memory location with the lowest address.  This
implementation was inspired by the AC_C_BIGENDIAN macro in autoconf.

The endianness is detected by first compiling C code that contains a
special double float value, then grepping the resulting object file for
certain strings of ASCII values.  The double is specially crafted to
have a binary representation that corresponds with a simple string.  In
this implementation, the string "noonsees" was selected because the
individual word values ("noon" and "sees") are palindromes, thus making
this test byte-order agnostic.  If grep finds the string "noonsees" in
the object file, the target platform stores float words in big-endian
order.  If grep finds "seesnoon", float words are in little-endian
order.  If neither value is found, the user is instructed to specify the
ordering.

Source Code
***********

Download the latest version of 'ax_c_float_words_bigendian.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_c_float_words_bigendian.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_c_float_words_bigendian.m4).

License
*******

Copyright (C) 2008 Daniel Amelang <dan@amelang.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_c_long_long,  Next: ax_c_referenceable_passed_va_list,  Prev: ax_c_float_words_bigendian,  Up: The Macros

ax_c_long_long
==============

Synopsis
********

     AX_C_LONG_LONG

Description
***********

Provides a test for the existence of the long long int type and defines
HAVE_LONG_LONG if it is found.

Source Code
***********

Download the latest version of 'ax_c_long_long.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_c_long_long.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_c_long_long.m4).

License
*******

Copyright (C) 2008 Caolan McNamara <caolan@skynet.ie>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_c_referenceable_passed_va_list,  Next: ax_c_restrict,  Prev: ax_c_long_long,  Up: The Macros

ax_c_referenceable_passed_va_list
=================================

Synopsis
********

     AX_C_REFERENCEABLE_PASSED_VA_LIST

Description
***********

Checks whether f(va_list va){ &va; } works as expected.

This macro uses compile-time detection and so is cross-compile ready.

C99 mentioned passing a pointer to va_list to other functions (footnote
212 of "7.15 Variable arguments <stdarg.h>").  However, f(va_list va) {
&va; } produces broken pointer on some environments such as gcc on
x86_64, although { va_list va; &va; } works as expected.  See the
detection code of this file and any of pages
https://www.gnu.org/software/autoconf/manual/html_node/Function-Portability.html,
http://gcc.gnu.org/bugzilla/show_bug.cgi?id=14557, and
http://gcc.gnu.org/bugzilla/show_bug.cgi?id=20951 for further
information.

Although C99 does not define the operations f(va_list va) { &va; } and
&va itself as standard (footnotes are declared as "normative part,
information only"), certain situations need it.  This macro provides a
type detection about va_list implementation to deal with the operation.

Following workaround will probably work on such environments although it
does not ensure to be safe and portable.  At least it is working on
x86_64-unknown-linux-gnu:

      f(va_list va)
      {
        va_list *vap;

      #if HAVE_REFERENCEABLE_PASSED_VA_LIST
          vap = &va;
      #else
          vap = (va_list *)va;
      #endif
      }

Source Code
***********

Download the latest version of 'ax_c_referenceable_passed_va_list.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_c_referenceable_passed_va_list.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_c_referenceable_passed_va_list.m4).

License
*******

Copyright (C) 2008 YAMAMOTO Kengo <yamaken@bp.iij4u.or.jp>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_c_restrict,  Next: ax_c_var_func,  Prev: ax_c_referenceable_passed_va_list,  Up: The Macros

ax_c_restrict
=============

Synopsis
********

     AX_C_RESTRICT

Description
***********

This macro checks if the C99 restrict keyword is broken with the current
compiler and optimizations settings.  If broken, it undefines restrict
to do no harm.  As of 2019 gcc since 5.0 and clang since 6.0 (June 2017)
are known to be broken and not yet fixed.  See
https://github.com/rust-lang/rust/issues/54878 with the links to the gcc
and clang tickets.

Source Code
***********

Download the latest version of 'ax_c_restrict.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_c_restrict.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_c_restrict.m4).

License
*******

Copyright (C) 2019 Reini Urban <rurban@cpan.org>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_c_var_func,  Next: ax_cache_size,  Prev: ax_c_restrict,  Up: The Macros

ax_c_var_func
=============

Synopsis
********

     AX_C_VAR_FUNC

Description
***********

This macro tests if the C compiler supports the C9X standard __func__
identifier.

The new C9X standard for the C language stipulates that the identifier
__func__ shall be implicitly declared by the compiler as if, immediately
following the opening brace of each function definition, the declaration

       static const char __func__[] = "function-name";

appeared, where function-name is the name of the function where the
__func__ identifier is used.

Source Code
***********

Download the latest version of 'ax_c_var_func.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_c_var_func.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_c_var_func.m4).

License
*******

Copyright (C) 2008 Christopher Currie <christopher@currie.com>

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <https://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro.  You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them.  The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive.  When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.


File: autoconf-archive.info,  Node: ax_cache_size,  Next: ax_caolan_check_package,  Prev: ax_c_var_func,  Up: The Macros

ax_cache_size
=============

Synopsis
********

     AX_CACHE_SIZE

Description
***********

Find L1 and L2 caches size by reading the corresponding file on UNIX or
by requesting cpuid.  The results are available in the defines
CPU_L1_CACHE and CPU_L2_CACHE.

This macro depends on AX_GCC_X86_CPUID, AC_PROG_SED, AX_COUNT_CPUS, and
AX_CPU_VENDOR.

Source Code
***********

Download the latest version of 'ax_cache_size.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_cache_size.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_cache_size.m4).

License
*******

Copyright (C) 2008 Christophe Tournayre <turn3r@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_caolan_check_package,  Next: ax_caolan_search_package,  Prev: ax_cache_size,  Up: The Macros

ax_caolan_check_package
=======================

Synopsis
********

     AX_caolan_CHECK_PACKAGE(PACKAGE, FUNCTION, LIBRARY , HEADERFILE [, ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND]])

Description
***********

Provides -with-PACKAGE, -with-PACKAGE-include and -with-PACKAGE-libdir
options to configure.  Supports the now standard -with-PACKAGE=DIR
approach where the package's include dir and lib dir are underneath DIR,
but also allows the include and lib directories to be specified
separately

adds the extra -Ipath to CFLAGS if needed adds extra -Lpath to LD_FLAGS
if needed searches for the FUNCTION in the LIBRARY with AC_CHECK_LIBRARY
and thus adds the lib to LIBS

defines HAVE_PKG_PACKAGE if it is found, (where PACKAGE in the
HAVE_PKG_PACKAGE is replaced with the actual first parameter passed)
note that autoheader will complain of not having the HAVE_PKG_PACKAGE
and you will have to add it to acconfig.h manually

Source Code
***********

Download the latest version of 'ax_caolan_check_package.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_caolan_check_package.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_caolan_check_package.m4).

License
*******

Copyright (C) 2008 Caolan McNamara <caolan@skynet.ie>
Copyright (C) 2008 Alexandre Duret-Lutz <adl@gnu.org>
Copyright (C) 2008 Matthew Mueller <donut@azstarnet.com>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_caolan_search_package,  Next: ax_cc_for_build,  Prev: ax_caolan_check_package,  Up: The Macros

ax_caolan_search_package
========================

Synopsis
********

     AX_caolan_SEARCH_PACKAGE(PACKAGE, FUNCTION, LIBRARY LIST, HEADERFILE [, ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND]])

Description
***********

Provides -with-PACKAGE, -with-PACKAGE-include and -with-PACKAGE-libdir
options to configure.  Supports the now standard -with-PACKAGE=DIR
approach where the package's include dir and lib dir are underneath DIR,
but also allows the include and lib directories to be specified
separately

adds the extra -Ipath to CFLAGS if needed adds extra -Lpath to LD_FLAGS
if needed searches for the FUNCTION in each of the LIBRARY LIST with
AC_SEARCH_LIBRARY and thus adds the lib to LIBS

defines HAVE_PKG_PACKAGE if it is found, (where PACKAGE in the
HAVE_PKG_PACKAGE is replaced with the actual first parameter passed)
note that autoheader will complain of not having the HAVE_PKG_PACKAGE
and you will have to add it to acconfig.h manually

Source Code
***********

Download the latest version of 'ax_caolan_search_package.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_caolan_search_package.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_caolan_search_package.m4).

License
*******

Copyright (C) 2009 Caolan McNamara <caolan@skynet.ie>
Copyright (C) 2009 Alexandre Duret-Lutz <adl@gnu.org>
Copyright (C) 2009 Matthew Mueller <donut@azstarnet.com>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_cc_for_build,  Next: ax_cc_maxopt,  Prev: ax_caolan_search_package,  Up: The Macros

ax_cc_for_build
===============

Synopsis
********

     AX_CC_FOR_BUILD

Description
***********

Find a build-time compiler.  Sets CC_FOR_BUILD and EXEEXT_FOR_BUILD.

AX_CC_FOR_BUILD is deprecated; it expands into AX_PROG_CC_FOR_BUILD
which renames EXEEXT_FOR_BUILD to BUILD_EXEEXT.

Source Code
***********

Download the latest version of 'ax_cc_for_build.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_cc_for_build.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_cc_for_build.m4).

License
*******

Copyright (C) 2010 Reuben Thomas <rrt@sc3d.org>
Copyright (C) 1999 Richard Henderson <rth@redhat.com>

This program is free software: you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation, either version 3 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <https://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro.  You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them.  The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive.  When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.


File: autoconf-archive.info,  Node: ax_cc_maxopt,  Next: ax_cf_ebcdic,  Prev: ax_cc_for_build,  Up: The Macros

ax_cc_maxopt
============

Synopsis
********

     AX_CC_MAXOPT

Description
***********

Try to turn on "good" C optimization flags for various compilers and
architectures, for some definition of "good".  (In our case, good for
FFTW and hopefully for other scientific codes.  Modify as needed.)

The user can override the flags by setting the CFLAGS environment
variable.  The user can also specify -enable-portable-binary in order to
disable any optimization flags that might result in a binary that only
runs on the host architecture.

Note also that the flags assume that ANSI C aliasing rules are followed
by the code (e.g.  for gcc's -fstrict-aliasing), and that floating-point
computations can be re-ordered as needed.

Requires macros: AX_CHECK_COMPILE_FLAG, AX_COMPILER_VENDOR,
AX_GCC_ARCHFLAG, AX_GCC_X86_CPUID.

Source Code
***********

Download the latest version of 'ax_cc_maxopt.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_cc_maxopt.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_cc_maxopt.m4).

License
*******

Copyright (C) 2008 Steven G. Johnson <stevenj@alum.mit.edu>
Copyright (C) 2008 Matteo Frigo

This program is free software: you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation, either version 3 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <https://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro.  You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them.  The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive.  When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.


File: autoconf-archive.info,  Node: ax_cf_ebcdic,  Next: ax_cflags_aix_option,  Prev: ax_cc_maxopt,  Up: The Macros

ax_cf_ebcdic
============

Synopsis
********

     AX_CF_EBCDIC

Description
***********

If the target character set is EBCDIC, defines variables cf_cv_ebcdic,
EBCDIC, and NOT_ASCII.

I originally wrote this and submitted it to the Lynx distribution.
Editorial revisions by Tom Dickey, et.  al.

Source Code
***********

Download the latest version of 'ax_cf_ebcdic.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_cf_ebcdic.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_cf_ebcdic.m4).

License
*******

Copyright (C) 2008 Paul Gilmartin <pg@sweng.stortek.com>

This program is free software: you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation, either version 3 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <https://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro.  You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them.  The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive.  When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.


File: autoconf-archive.info,  Node: ax_cflags_aix_option,  Next: ax_cflags_force_c89,  Prev: ax_cf_ebcdic,  Up: The Macros

ax_cflags_aix_option
====================

Synopsis
********

     AX_CFLAGS_AIX_OPTION (optionflag [,[shellvar][,[A][,[NA]]])

Description
***********

AX_CFLAGS_AIX_OPTION(-qubicle) would show a message as like "checking
CFLAGS for aix/cc -qubicle ...  yes" and adds the optionflag to CFLAGS
if it is understood.  You can override the shellvar-default of CFLAGS of
course.  The order of arguments stems from the explicit macros like
AX_CFLAGS_WARN_ALL.

The cousin AX_CXXFLAGS_AIX_OPTION would check for an option to add to
CXXFLAGS - and it uses the autoconf setup for C++ instead of C (since it
is possible to use different compilers for C and C++).

The macro is a lot simpler than any special AX_CFLAGS_* macro (or
ax_cxx_rtti.m4 macro) but allows to check for arbitrary options.
However, if you use this macro in a few places, it would be great if you
would make up a new function-macro and submit it to the ac-archive.

      - $1 option-to-check-for : required ("-option" as non-value)
      - $2 shell-variable-to-add-to : CFLAGS (or CXXFLAGS in the other case)
      - $3 action-if-found : add value to shellvariable
      - $4 action-if-not-found : nothing

note: in earlier versions, $1-$2 were swapped.  We try to detect the
situation and accept a $2=~/-/ as being the old option-to-check-for.

see also: AX_CFLAGS_GCC_OPTION for the widely used original variant.

Source Code
***********

Download the latest version of 'ax_cflags_aix_option.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_cflags_aix_option.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_cflags_aix_option.m4).

License
*******

Copyright (C) 2008 Guido U. Draheim <guidod@gmx.de>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_cflags_force_c89,  Next: ax_cflags_hpux_option,  Prev: ax_cflags_aix_option,  Up: The Macros

ax_cflags_force_c89
===================

Synopsis
********

     AX_CFLAGS_FORCE_C89 [(shellvar [,default, [A/NA]])]

Description
***********

Try to find a compiler option that enables strict C89 mode.

For the GNU CC compiler it will be -ansi -pedantic.  The result is added
to the shellvar being CFLAGS by default.

Currently this macro knows about GCC, Solaris C compiler, Digital Unix C
compiler, C for AIX Compiler, HP-UX C compiler, IRIX C compiler, NEC
SX-5 (Super-UX 10) C compiler, and Cray J90 (Unicos 10.0.0.8) C
compiler.

      - $1 shell-variable-to-add-to : CFLAGS
      - $2 add-value-if-not-found : nothing
      - $3 action-if-found : add value to shellvariable
      - $4 action-if-not-found : nothing

NOTE: These macros depend on AX_APPEND_FLAG.

Source Code
***********

Download the latest version of 'ax_cflags_force_c89.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_cflags_force_c89.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_cflags_force_c89.m4).

License
*******

Copyright (C) 2009 Guido U. Draheim <guidod@gmx.de>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_cflags_hpux_option,  Next: ax_cflags_irix_option,  Prev: ax_cflags_force_c89,  Up: The Macros

ax_cflags_hpux_option
=====================

Synopsis
********

     AX_CFLAGS_HPUX_OPTION (optionflag [,[shellvar][,[A][,[NA]]])

Description
***********

AX_CFLAGS_HPUX_OPTION(-Afresh) would show a message as like "checking
CFLAGS for hpux/cc -Afresh ...  yes" and adds the optionflag to CFLAGS
if it is understood.  You can override the shellvar-default of CFLAGS of
course.  The order of arguments stems from the explicit macros like
AX_CFLAGS_WARN_ALL.

The cousin AX_CXXFLAGS_HPUX_OPTION would check for an option to add to
CXXFLAGS - and it uses the autoconf setup for C++ instead of C (since it
is possible to use different compilers for C and C++).

The macro is a lot simpler than any special AX_CFLAGS_* macro (or
ax_cxx_rtti.m4 macro) but allows to check for arbitrary options.
However, if you use this macro in a few places, it would be great if you
would make up a new function-macro and submit it to the ac-archive.

      - $1 option-to-check-for : required ("-option" as non-value)
      - $2 shell-variable-to-add-to : CFLAGS (or CXXFLAGS in the other case)
      - $3 action-if-found : add value to shellvariable
      - $4 action-if-not-found : nothing

note: in earlier versions, $1-$2 were swapped.  We try to detect the
situation and accept a $2=~/-/ as being the old option-to-check-for.

see also: AX_CFLAGS_GCC_OPTION for the widely used original variant.

Source Code
***********

Download the latest version of 'ax_cflags_hpux_option.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_cflags_hpux_option.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_cflags_hpux_option.m4).

License
*******

Copyright (C) 2008 Guido U. Draheim <guidod@gmx.de>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_cflags_irix_option,  Next: ax_cflags_no_writable_strings,  Prev: ax_cflags_hpux_option,  Up: The Macros

ax_cflags_irix_option
=====================

Synopsis
********

     AX_CFLAGS_IRIX_OPTION (optionflag [,[shellvar][,[A][,[NA]]])

Description
***********

AX_CFLAGS_IRIX_OPTION(-go_for_it) would show a message as like "checking
CFLAGS for irix/cc -go_for_it ...  yes" and adds the optionflag to
CFLAGS if it is understood.  You can override the shellvar-default of
CFLAGS of course.  The order of arguments stems from the explicit macros
like AX_CFLAGS_WARN_ALL.

The cousin AX_CXXFLAGS_IRIX_OPTION would check for an option to add to
CXXFLAGS - and it uses the autoconf setup for C++ instead of C (since it
is possible to use different compilers for C and C++).

The macro is a lot simpler than any special AX_CFLAGS_* macro (or
ax_cxx_rtti.m4 macro) but allows to check for arbitrary options.
However, if you use this macro in a few places, it would be great if you
would make up a new function-macro and submit it to the ac-archive.

      - $1 option-to-check-for : required ("-option" as non-value)
      - $2 shell-variable-to-add-to : CFLAGS (or CXXFLAGS in the other case)
      - $3 action-if-found : add value to shellvariable
      - $4 action-if-not-found : nothing

note: in earlier versions, $1-$2 were swapped.  We try to detect the
situation and accept a $2=~/-/ as being the old option-to-check-for.

see also: AX_CFLAGS_GCC_OPTION for the widely used original variant.

Source Code
***********

Download the latest version of 'ax_cflags_irix_option.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_cflags_irix_option.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_cflags_irix_option.m4).

License
*******

Copyright (C) 2008 Guido U. Draheim <guidod@gmx.de>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_cflags_no_writable_strings,  Next: ax_cflags_strict_prototypes,  Prev: ax_cflags_irix_option,  Up: The Macros

ax_cflags_no_writable_strings
=============================

Synopsis
********

     AX_CFLAGS_NO_WRITABLE_STRINGS [(shellvar [,default, [A/NA]])]

Description
***********

Try to find a compiler option that makes all string literals readonly.

The sanity check is done by looking at string.h which has a set of
strcpy definitions that should be defined with const-modifiers to not
emit a warning in all so many places.

For the GNU CC compiler it will be -fno-writable-strings -Wwrite-strings
The result is added to the shellvar being CFLAGS by default.

DEFAULTS:

      - $1 shell-variable-to-add-to : CFLAGS
      - $2 add-value-if-not-found : nothing
      - $3 action-if-found : add value to shellvariable
      - $4 action-if-not-found : nothing

NOTE: These macros depend on AX_APPEND_FLAG.

Source Code
***********

Download the latest version of 'ax_cflags_no_writable_strings.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_cflags_no_writable_strings.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_cflags_no_writable_strings.m4).

License
*******

Copyright (C) 2008 Guido U. Draheim <guidod@gmx.de>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_cflags_strict_prototypes,  Next: ax_cflags_sun_option,  Prev: ax_cflags_no_writable_strings,  Up: The Macros

ax_cflags_strict_prototypes
===========================

Synopsis
********

     AX_CFLAGS_STRICT_PROTOTYPES [(shellvar [,default, [A/NA]]

Description
***********

Try to find a compiler option that requires strict prototypes.

The sanity check is done by looking at sys/signal.h which has a set of
macro-definitions SIG_DFL and SIG_IGN that are cast to the local
signal-handler type.  If that signal-handler type is not fully qualified
then the system headers are not seen as strictly prototype clean.

For the GNU CC compiler it will be -fstrict-prototypes
-Wstrict-prototypes The result is added to the shellvar being CFLAGS by
default.

DEFAULTS:

      - $1 shell-variable-to-add-to : CFLAGS
      - $2 add-value-if-not-found : nothing
      - $3 action-if-found : add value to shellvariable
      - $4 action-if-not-found : nothing

NOTE: These macros depend on AX_APPEND_FLAG.

Source Code
***********

Download the latest version of 'ax_cflags_strict_prototypes.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_cflags_strict_prototypes.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_cflags_strict_prototypes.m4).

License
*******

Copyright (C) 2008 Guido U. Draheim <guidod@gmx.de>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_cflags_sun_option,  Next: ax_cflags_warn_all,  Prev: ax_cflags_strict_prototypes,  Up: The Macros

ax_cflags_sun_option
====================

Synopsis
********

     AX_CFLAGS_SUN_OPTION (optionflag [,[shellvar][,[A][,[NA]]])

Description
***********

AX_CFLAGS_SUN_OPTION(+xtreme) would show a message as like "checking
CFLAGS for sun/cc +xtreme ...  yes" and adds the optionflag to CFLAGS if
it is understood.  You can override the shellvar-default of CFLAGS of
course.  The order of arguments stems from the explicit macros like
AX_CFLAGS_WARN_ALL.

The cousin AX_CXXFLAGS_SUN_OPTION would check for an option to add to
CXXFLAGS - and it uses the autoconf setup for C++ instead of C (since it
is possible to use different compilers for C and C++).

The macro is a lot simpler than any special AX_CFLAGS_* macro (or
ax_cxx_rtti.m4 macro) but allows to check for arbitrary options.
However, if you use this macro in a few places, it would be great if you
would make up a new function-macro and submit it to the ac-archive.

      - $1 option-to-check-for : required ("-option" as non-value)
      - $2 shell-variable-to-add-to : CFLAGS (or CXXFLAGS in the other case)
      - $3 action-if-found : add value to shellvariable
      - $4 action-if-not-found : nothing

note: in earlier versions, $1-$2 were swapped.  We try to detect the
situation and accept a $2=~/-/ as being the old option-to-check-for.

see also: AX_CFLAGS_GCC_OPTION for the widely used original variant.

Source Code
***********

Download the latest version of 'ax_cflags_sun_option.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_cflags_sun_option.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_cflags_sun_option.m4).

License
*******

Copyright (C) 2008 Guido U. Draheim <guidod@gmx.de>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_cflags_warn_all,  Next: ax_check_aligned_access_required,  Prev: ax_cflags_sun_option,  Up: The Macros

ax_cflags_warn_all
==================

Synopsis
********

     AX_CFLAGS_WARN_ALL   [(shellvar[, default[, action-if-found[, action-if-not-found]]])]
     AX_CXXFLAGS_WARN_ALL [(shellvar[, default[, action-if-found[, action-if-not-found]]])]
     AX_FCFLAGS_WARN_ALL  [(shellvar[, default[, action-if-found[, action-if-not-found]]])]

Description
***********

Specify compiler options that enable most reasonable warnings.  For the
GNU Compiler Collection (GCC), for example, it will be "-Wall".  The
result is added to shellvar, one of CFLAGS, CXXFLAGS or FCFLAGS if the
first parameter is not specified.

Each of these macros accepts the following optional arguments:

       - $1 - shellvar
           shell variable to use (CFLAGS, CXXFLAGS or FCFLAGS if not
           specified, depending on macro)

       - $2 - default
           value to use for flags if compiler vendor cannot be determined (by
           default, "")

       - $3 - action-if-found
           action to take if the compiler vendor has been successfully
           determined (by default, add the appropriate compiler flags to
           shellvar)

       - $4 - action-if-not-found
           action to take if the compiler vendor has not been determined or
           is unknown (by default, add the default flags, or "" if not
           specified, to shellvar)

These macros use AX_COMPILER_VENDOR to determine which flags should be
returned for a given compiler.  Not all compilers currently have flags
defined for them; patches are welcome.  If need be, compiler flags may
be made language-dependent: use a construct like the following:

       [vendor_name], [m4_if(_AC_LANG_PREFIX,[C],   VAR="--relevant-c-flags",dnl
                       m4_if(_AC_LANG_PREFIX,[CXX], VAR="--relevant-c++-flags",dnl
                       m4_if(_AC_LANG_PREFIX,[FC],  VAR="--relevant-fortran-flags",dnl
                       VAR="$2"; FOUND="no")))],

Note: These macros also depend on AX_PREPEND_FLAG.

Source Code
***********

Download the latest version of 'ax_cflags_warn_all.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_cflags_warn_all.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_cflags_warn_all.m4).

License
*******

Copyright (C) 2008 Guido U. Draheim <guidod@gmx.de>
Copyright (C) 2010 Rhys Ulerich <rhys.ulerich@gmail.com>
Copyright (C) 2018 John Zaitseff <J.Zaitseff@zap.org.au>

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 3 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <https://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro.  You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them.  The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive.  When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.


File: autoconf-archive.info,  Node: ax_check_aligned_access_required,  Next: ax_check_allocated_ctime,  Prev: ax_cflags_warn_all,  Up: The Macros

ax_check_aligned_access_required
================================

Synopsis
********

     AX_CHECK_ALIGNED_ACCESS_REQUIRED

Description
***********

While the x86 CPUs allow access to memory objects to be unaligned it
happens that most of the modern designs require objects to be aligned -
or they will fail with a buserror.  That mode is quite known by
big-endian machines (sparc, etc) however the alpha cpu is little-
endian.

The following function will test for aligned access to be required and
set a config.h define HAVE_ALIGNED_ACCESS_REQUIRED (name derived by
standard usage).  Structures loaded from a file (or mmapped to memory)
should be accessed per-byte in that case to avoid segfault type errors.

The function checks if unaligned access would ignore the lowest bit of
the address.  If that happens or if the test binary crashes, aligned
access is required.

If cross-compiling, assume that aligned access is needed to be safe.
Set ax_cv_have_aligned_access_required=no to override that assumption.

Source Code
***********

Download the latest version of 'ax_check_aligned_access_required.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_aligned_access_required.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_aligned_access_required.m4).

License
*******

Copyright (C) 2008 Guido U. Draheim <guidod@gmx.de>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_allocated_ctime,  Next: ax_check_awk__v,  Prev: ax_check_aligned_access_required,  Up: The Macros

ax_check_allocated_ctime
========================

Synopsis
********

     AX_CHECK_ALLOCATED_CTIME

Description
***********

Check whether we need to free the memory returned by ctime.

Source Code
***********

Download the latest version of 'ax_check_allocated_ctime.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_allocated_ctime.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_allocated_ctime.m4).

License
*******

Copyright (C) 2008 Bruce Korb <bkorb@gnu.org>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk__v,  Next: ax_check_awk__x_escapes,  Prev: ax_check_allocated_ctime,  Up: The Macros

ax_check_awk__v
===============

Synopsis
********

     AX_CHECK_AWK__V([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports -v option ($AWK -v var=val '<PROGRAM>').  If
successful execute ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk__v.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk__v.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk__v.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk__x_escapes,  Next: ax_check_awk_and,  Prev: ax_check_awk__v,  Up: The Macros

ax_check_awk__x_escapes
=======================

Synopsis
********

     AX_CHECK_AWK__X_ESCAPES([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports \x escape codes.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk__x_escapes.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk__x_escapes.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk__x_escapes.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_and,  Next: ax_check_awk_argind,  Prev: ax_check_awk__x_escapes,  Up: The Macros

ax_check_awk_and
================

Synopsis
********

     AX_CHECK_AWK_AND([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports and() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_and.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_and.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_and.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_argind,  Next: ax_check_awk_array_delete,  Prev: ax_check_awk_and,  Up: The Macros

ax_check_awk_argind
===================

Synopsis
********

     AX_CHECK_AWK_ARGIND([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports ARGIND variable.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_argind.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_argind.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_argind.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_array_delete,  Next: ax_check_awk_array_delete_elem,  Prev: ax_check_awk_argind,  Up: The Macros

ax_check_awk_array_delete
=========================

Synopsis
********

     AX_CHECK_AWK_ARRAY_DELETE([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports delete on array.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_array_delete.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_array_delete.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_array_delete.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_array_delete_elem,  Next: ax_check_awk_array_in,  Prev: ax_check_awk_array_delete,  Up: The Macros

ax_check_awk_array_delete_elem
==============================

Synopsis
********

     AX_CHECK_AWK_ARRAY_DELETE_ELEM([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports delete on array element.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_array_delete_elem.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_array_delete_elem.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_array_delete_elem.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_array_in,  Next: ax_check_awk_asort,  Prev: ax_check_awk_array_delete_elem,  Up: The Macros

ax_check_awk_array_in
=====================

Synopsis
********

     AX_CHECK_AWK_ARRAY_IN([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports 'in' on array.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_array_in.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_array_in.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_array_in.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_asort,  Next: ax_check_awk_asorti,  Prev: ax_check_awk_array_in,  Up: The Macros

ax_check_awk_asort
==================

Synopsis
********

     AX_CHECK_AWK_ASORT([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports asort() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_asort.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_asort.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_asort.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_asorti,  Next: ax_check_awk_associative_array,  Prev: ax_check_awk_asort,  Up: The Macros

ax_check_awk_asorti
===================

Synopsis
********

     AX_CHECK_AWK_ASORTI([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports asorti() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_asorti.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_asorti.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_asorti.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_associative_array,  Next: ax_check_awk_atan2,  Prev: ax_check_awk_asorti,  Up: The Macros

ax_check_awk_associative_array
==============================

Synopsis
********

     AX_CHECK_AWK_ASSOCIATIVE_ARRAY([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports associative array.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_associative_array.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_associative_array.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_associative_array.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_atan2,  Next: ax_check_awk_compl,  Prev: ax_check_awk_associative_array,  Up: The Macros

ax_check_awk_atan2
==================

Synopsis
********

     AX_CHECK_AWK_ATAN2([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports atan2() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_atan2.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_atan2.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_atan2.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_compl,  Next: ax_check_awk_conditional_expression,  Prev: ax_check_awk_atan2,  Up: The Macros

ax_check_awk_compl
==================

Synopsis
********

     AX_CHECK_AWK_COMPL([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports compl() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_compl.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_compl.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_compl.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_conditional_expression,  Next: ax_check_awk_cos,  Prev: ax_check_awk_compl,  Up: The Macros

ax_check_awk_conditional_expression
===================================

Synopsis
********

     AX_CHECK_AWK_CONDITIONAL_EXPRESSION([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports conditional expression (e.g.  x = y ?  5 : 6).  If
successful execute ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_conditional_expression.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_conditional_expression.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_conditional_expression.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_cos,  Next: ax_check_awk_environ,  Prev: ax_check_awk_conditional_expression,  Up: The Macros

ax_check_awk_cos
================

Synopsis
********

     AX_CHECK_AWK_COS([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports cos() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_cos.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_cos.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_cos.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_environ,  Next: ax_check_awk_errno,  Prev: ax_check_awk_cos,  Up: The Macros

ax_check_awk_environ
====================

Synopsis
********

     AX_CHECK_AWK_ENVIRON([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports ENVIRON variable.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_environ.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_environ.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_environ.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_errno,  Next: ax_check_awk_exit,  Prev: ax_check_awk_environ,  Up: The Macros

ax_check_awk_errno
==================

Synopsis
********

     AX_CHECK_AWK_ERRNO([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports ERRNO variable.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_errno.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_errno.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_errno.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_exit,  Next: ax_check_awk_exp,  Prev: ax_check_awk_errno,  Up: The Macros

ax_check_awk_exit
=================

Synopsis
********

     AX_CHECK_AWK_EXIT([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports exit().  If successful execute ACTION-IF-SUCCESS
otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_exit.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_exit.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_exit.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_exp,  Next: ax_check_awk_gensub,  Prev: ax_check_awk_exit,  Up: The Macros

ax_check_awk_exp
================

Synopsis
********

     AX_CHECK_AWK_EXP([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports exp() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_exp.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_exp.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_exp.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_gensub,  Next: ax_check_awk_getline,  Prev: ax_check_awk_exp,  Up: The Macros

ax_check_awk_gensub
===================

Synopsis
********

     AX_CHECK_AWK_GENSUB([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports gensub() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_gensub.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_gensub.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_gensub.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_getline,  Next: ax_check_awk_gsub,  Prev: ax_check_awk_gensub,  Up: The Macros

ax_check_awk_getline
====================

Synopsis
********

     AX_CHECK_AWK_GETLINE([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports getline function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_getline.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_getline.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_getline.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_gsub,  Next: ax_check_awk_ignorecase,  Prev: ax_check_awk_getline,  Up: The Macros

ax_check_awk_gsub
=================

Synopsis
********

     AX_CHECK_AWK_GSUB([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports gsub() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_gsub.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_gsub.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_gsub.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_ignorecase,  Next: ax_check_awk_index,  Prev: ax_check_awk_gsub,  Up: The Macros

ax_check_awk_ignorecase
=======================

Synopsis
********

     AX_CHECK_AWK_IGNORECASE([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports IGNORECASE variable.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_ignorecase.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_ignorecase.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_ignorecase.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_index,  Next: ax_check_awk_int,  Prev: ax_check_awk_ignorecase,  Up: The Macros

ax_check_awk_index
==================

Synopsis
********

     AX_CHECK_AWK_INDEX([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports index() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_index.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_index.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_index.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_int,  Next: ax_check_awk_length,  Prev: ax_check_awk_index,  Up: The Macros

ax_check_awk_int
================

Synopsis
********

     AX_CHECK_AWK_INT([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports int() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_int.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_int.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_int.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_length,  Next: ax_check_awk_log,  Prev: ax_check_awk_int,  Up: The Macros

ax_check_awk_length
===================

Synopsis
********

     AX_CHECK_AWK_LENGTH([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports length() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_length.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_length.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_length.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_log,  Next: ax_check_awk_lshift,  Prev: ax_check_awk_length,  Up: The Macros

ax_check_awk_log
================

Synopsis
********

     AX_CHECK_AWK_LOG([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports log() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_log.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_log.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_log.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_lshift,  Next: ax_check_awk_match_2parms,  Prev: ax_check_awk_log,  Up: The Macros

ax_check_awk_lshift
===================

Synopsis
********

     AX_CHECK_AWK_LSHIFT([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports lshift() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_lshift.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_lshift.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_lshift.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_match_2parms,  Next: ax_check_awk_match_3parms,  Prev: ax_check_awk_lshift,  Up: The Macros

ax_check_awk_match_2parms
=========================

Synopsis
********

     AX_CHECK_AWK_MATCH_2PARMS([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports match() function with 2 parameters (standard).  If
successful execute ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_match_2parms.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_match_2parms.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_match_2parms.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_match_3parms,  Next: ax_check_awk_operator_multiply_multiply,  Prev: ax_check_awk_match_2parms,  Up: The Macros

ax_check_awk_match_3parms
=========================

Synopsis
********

     AX_CHECK_AWK_MATCH_3PARMS([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports match() function with 3 parameters (GNU
extension).  If successful execute ACTION-IF-SUCCESS otherwise
ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_match_3parms.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_match_3parms.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_match_3parms.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_operator_multiply_multiply,  Next: ax_check_awk_operator_square,  Prev: ax_check_awk_match_3parms,  Up: The Macros

ax_check_awk_operator_multiply_multiply
=======================================

Synopsis
********

     AX_CHECK_AWK_OPERATOR_MULTIPLY_MULTIPLY([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports the '**' operator.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of
'ax_check_awk_operator_multiply_multiply.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_operator_multiply_multiply.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_operator_multiply_multiply.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_operator_square,  Next: ax_check_awk_or,  Prev: ax_check_awk_operator_multiply_multiply,  Up: The Macros

ax_check_awk_operator_square
============================

Synopsis
********

     AX_CHECK_AWK_OPERATOR_SQUARE([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports the '^' operator.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_operator_square.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_operator_square.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_operator_square.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_or,  Next: ax_check_awk_printf,  Prev: ax_check_awk_operator_square,  Up: The Macros

ax_check_awk_or
===============

Synopsis
********

     AX_CHECK_AWK_OR([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports or() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_or.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_or.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_or.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_printf,  Next: ax_check_awk_rand,  Prev: ax_check_awk_or,  Up: The Macros

ax_check_awk_printf
===================

Synopsis
********

     AX_CHECK_AWK_PRINTF([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports printf() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_printf.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_printf.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_printf.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_rand,  Next: ax_check_awk_rshift,  Prev: ax_check_awk_printf,  Up: The Macros

ax_check_awk_rand
=================

Synopsis
********

     AX_CHECK_AWK_RAND([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports rand() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_rand.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_rand.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_rand.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_rshift,  Next: ax_check_awk_sin,  Prev: ax_check_awk_rand,  Up: The Macros

ax_check_awk_rshift
===================

Synopsis
********

     AX_CHECK_AWK_RSHIFT([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports rshift() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_rshift.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_rshift.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_rshift.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_sin,  Next: ax_check_awk_split,  Prev: ax_check_awk_rshift,  Up: The Macros

ax_check_awk_sin
================

Synopsis
********

     AX_CHECK_AWK_SIN([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports sin() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_sin.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_sin.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_sin.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_split,  Next: ax_check_awk_sprintf,  Prev: ax_check_awk_sin,  Up: The Macros

ax_check_awk_split
==================

Synopsis
********

     AX_CHECK_AWK_SPLIT([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports split() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_split.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_split.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_split.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_sprintf,  Next: ax_check_awk_sqrt,  Prev: ax_check_awk_split,  Up: The Macros

ax_check_awk_sprintf
====================

Synopsis
********

     AX_CHECK_AWK_SPRINTF([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports sprintf() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_sprintf.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_sprintf.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_sprintf.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_sqrt,  Next: ax_check_awk_srand,  Prev: ax_check_awk_sprintf,  Up: The Macros

ax_check_awk_sqrt
=================

Synopsis
********

     AX_CHECK_AWK_SQRT([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports sqrt() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_sqrt.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_sqrt.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_sqrt.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_srand,  Next: ax_check_awk_strftime,  Prev: ax_check_awk_sqrt,  Up: The Macros

ax_check_awk_srand
==================

Synopsis
********

     AX_CHECK_AWK_SRAND([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports srand() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_srand.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_srand.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_srand.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_strftime,  Next: ax_check_awk_strtonum,  Prev: ax_check_awk_srand,  Up: The Macros

ax_check_awk_strftime
=====================

Synopsis
********

     AX_CHECK_AWK_STRFTIME([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports strftime() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_strftime.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_strftime.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_strftime.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_strtonum,  Next: ax_check_awk_sub,  Prev: ax_check_awk_strftime,  Up: The Macros

ax_check_awk_strtonum
=====================

Synopsis
********

     AX_CHECK_AWK_STRTONUM([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports strtonum() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_strtonum.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_strtonum.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_strtonum.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_sub,  Next: ax_check_awk_substr,  Prev: ax_check_awk_strtonum,  Up: The Macros

ax_check_awk_sub
================

Synopsis
********

     AX_CHECK_AWK_SUB([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports sub() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_sub.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_sub.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_sub.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_substr,  Next: ax_check_awk_system,  Prev: ax_check_awk_sub,  Up: The Macros

ax_check_awk_substr
===================

Synopsis
********

     AX_CHECK_AWK_SUBSTR([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports substr() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_substr.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_substr.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_substr.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_system,  Next: ax_check_awk_systime,  Prev: ax_check_awk_substr,  Up: The Macros

ax_check_awk_system
===================

Synopsis
********

     AX_CHECK_AWK_SYSTEM([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports system() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_system.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_system.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_system.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_systime,  Next: ax_check_awk_tolower,  Prev: ax_check_awk_system,  Up: The Macros

ax_check_awk_systime
====================

Synopsis
********

     AX_CHECK_AWK_SYSTIME([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports systime() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_systime.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_systime.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_systime.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_tolower,  Next: ax_check_awk_toupper,  Prev: ax_check_awk_systime,  Up: The Macros

ax_check_awk_tolower
====================

Synopsis
********

     AX_CHECK_AWK_TOLOWER([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports tolower() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_tolower.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_tolower.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_tolower.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_toupper,  Next: ax_check_awk_user_defined_functions,  Prev: ax_check_awk_tolower,  Up: The Macros

ax_check_awk_toupper
====================

Synopsis
********

     AX_CHECK_AWK_TOUPPER([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports toupper() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_toupper.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_toupper.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_toupper.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_user_defined_functions,  Next: ax_check_awk_var_regexp,  Prev: ax_check_awk_toupper,  Up: The Macros

ax_check_awk_user_defined_functions
===================================

Synopsis
********

     AX_CHECK_AWK_USER_DEFINED_FUNCTIONS([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports user defined functions.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_user_defined_functions.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_user_defined_functions.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_user_defined_functions.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_var_regexp,  Next: ax_check_awk_variable_value_pairs,  Prev: ax_check_awk_user_defined_functions,  Up: The Macros

ax_check_awk_var_regexp
=======================

Synopsis
********

     AX_CHECK_AWK_VAR_REGEXP([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports variable regexp.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_var_regexp.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_var_regexp.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_var_regexp.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_variable_value_pairs,  Next: ax_check_awk_xor,  Prev: ax_check_awk_var_regexp,  Up: The Macros

ax_check_awk_variable_value_pairs
=================================

Synopsis
********

     AX_CHECK_AWK_VARIABLE_VALUE_PAIRS([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports variable=value pairs ($AWK '<PROGRAM>' var=val).
If successful execute ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_variable_value_pairs.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_variable_value_pairs.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_variable_value_pairs.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_awk_xor,  Next: ax_check_class,  Prev: ax_check_awk_variable_value_pairs,  Up: The Macros

ax_check_awk_xor
================

Synopsis
********

     AX_CHECK_AWK_XOR([ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])

Description
***********

Check if AWK supports xor() function.  If successful execute
ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.

This work is heavily based upon testawk.sh script by Heiner Steven.  You
should find his script (and related works) at
<http://www.shelldorado.com/articles/awkcompat.html>.  Thanks to
Alessandro Massignan for his suggestions and extensive nawk tests on
FreeBSD.

Source Code
***********

Download the latest version of 'ax_check_awk_xor.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_awk_xor.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_awk_xor.m4).

License
*******

Copyright (C) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_class,  Next: ax_check_classpath,  Prev: ax_check_awk_xor,  Up: The Macros

ax_check_class
==============

Synopsis
********

     AX_CHECK_CLASS

Description
***********

AX_CHECK_CLASS tests the existence of a given Java class, either in a
jar or in a '.class' file.

*Warning*: its success or failure can depend on a proper setting of the
CLASSPATH env.  variable.

Note: This is part of the set of autoconf M4 macros for Java programs.
It is VERY IMPORTANT that you download the whole set, some macros depend
on other.  Unfortunately, the autoconf archive does not support the
concept of set of macros, so I had to break it for submission.  The
general documentation, as well as the sample configure.in, is included
in the AX_PROG_JAVA macro.

Source Code
***********

Download the latest version of 'ax_check_class.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_class.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_class.m4).

License
*******

Copyright (C) 2008 Stephane Bortzmeyer <bortzmeyer@pasteur.fr>

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <https://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro.  You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them.  The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive.  When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.


File: autoconf-archive.info,  Node: ax_check_classpath,  Next: ax_check_compile_flag,  Prev: ax_check_class,  Up: The Macros

ax_check_classpath
==================

Synopsis
********

     AX_CHECK_CLASSPATH

Description
***********

AX_CHECK_CLASSPATH just displays the CLASSPATH, for the edification of
the user.

Note: This is part of the set of autoconf M4 macros for Java programs.
It is VERY IMPORTANT that you download the whole set, some macros depend
on other.  Unfortunately, the autoconf archive does not support the
concept of set of macros, so I had to break it for submission.  The
general documentation, as well as the sample configure.in, is included
in the AX_PROG_JAVA macro.

Source Code
***********

Download the latest version of 'ax_check_classpath.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_classpath.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_classpath.m4).

License
*******

Copyright (C) 2008 Stephane Bortzmeyer <bortzmeyer@pasteur.fr>

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <https://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro.  You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them.  The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive.  When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.


File: autoconf-archive.info,  Node: ax_check_compile_flag,  Next: ax_check_define,  Prev: ax_check_classpath,  Up: The Macros

ax_check_compile_flag
=====================

Synopsis
********

     AX_CHECK_COMPILE_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])

Description
***********

Check whether the given FLAG works with the current language's compiler
or gives an error.  (Warnings, however, are ignored)

ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on
success/failure.

If EXTRA-FLAGS is defined, it is added to the current language's default
flags (e.g.  CFLAGS) when the check is done.  The check is thus made
with the flags: "CFLAGS EXTRA-FLAGS FLAG". This can for example be used
to force the compiler to issue an error when a bad flag is given.

INPUT gives an alternative input source to AC_COMPILE_IFELSE.

NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this
macro in sync with AX_CHECK_{PREPROC,LINK}_FLAG.

Source Code
***********

Download the latest version of 'ax_check_compile_flag.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_compile_flag.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_compile_flag.m4).

License
*******

Copyright (C) 2008 Guido U. Draheim <guidod@gmx.de>
Copyright (C) 2011 Maarten Bosmans <mkbosmans@gmail.com>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_define,  Next: ax_check_docbook_dtd,  Prev: ax_check_compile_flag,  Up: The Macros

ax_check_define
===============

Synopsis
********

     AC_CHECK_DEFINE([symbol], [ACTION-IF-FOUND], [ACTION-IF-NOT])
     AX_CHECK_DEFINE([includes],[symbol], [ACTION-IF-FOUND], [ACTION-IF-NOT])

Description
***********

Complements AC_CHECK_FUNC but it does not check for a function but for a
define to exist.  Consider a usage like:

      AC_CHECK_DEFINE(__STRICT_ANSI__, CFLAGS="$CFLAGS -D_XOPEN_SOURCE=500")

Source Code
***********

Download the latest version of 'ax_check_define.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_define.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_define.m4).

License
*******

Copyright (C) 2008 Guido U. Draheim <guidod@gmx.de>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_docbook_dtd,  Next: ax_check_docbook_xslt,  Prev: ax_check_define,  Up: The Macros

ax_check_docbook_dtd
====================

Synopsis
********

     AX_CHECK_DOCBOOK_DTD([dtd-version])

Description
***********

Check for access to a docbook DTD of a particular revision.  This macro
can be used for multiple versions within the same script.

Input:

$1 is the version of docbook to search for; default 'current'.

Output:

$HAVE_DOCBOOK_DTD_VERS will be set to 'yes' or 'no' depending on the
results of the test, where VERS is $1, with '_' substituted for '.'
$HAVE_DOCBOOK_DTD will also be set to the same value.

Example:

      AX_CHECK_DOCBOOK_DTD(4.3)
      if test "x$HAVE_DOCBOOK_DTD_4_3" = "xyes"; then
      ...

Source Code
***********

Download the latest version of 'ax_check_docbook_dtd.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_docbook_dtd.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_docbook_dtd.m4).

License
*******

Copyright (C) 2008 Zmanda Inc. <http://www.zmanda.com/>
Copyright (C) 2008 Dustin J. Mitchell <dustin@zmanda.com>

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <https://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro.  You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them.  The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive.  When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.


File: autoconf-archive.info,  Node: ax_check_docbook_xslt,  Next: ax_check_docbook_xslt_min,  Prev: ax_check_docbook_dtd,  Up: The Macros

ax_check_docbook_xslt
=====================

Synopsis
********

     AX_CHECK_DOCBOOK_XSLT([xslt-version])

Description
***********

Check for access to docbook stylesheets of a particular revision.  This
macro can be used for multiple versions within the same script.

Input:

$1 is the version of docbook to search for; default 'current'.

Output:

$HAVE_DOCBOOK_XSLT_VERS will be set to 'yes' or 'no' depending on the
results of the test, where VERS is $1, with '_' substituted for '.'.
$HAVE_DOCBOOK_XSLT will also be set to the same value.

Example:

      AX_CHECK_DOCBOOK_XSLT(1.72.0)
      if test "x$HAVE_DOCBOOK_XSLT_1_72_0" = "xyes"; then
      ...

Source Code
***********

Download the latest version of 'ax_check_docbook_xslt.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_docbook_xslt.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_docbook_xslt.m4).

License
*******

Copyright (C) 2008 Zmanda Inc. <http://www.zmanda.com/>
Copyright (C) 2008 Dustin J. Mitchell <dustin@zmanda.com>

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <https://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro.  You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them.  The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive.  When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.


File: autoconf-archive.info,  Node: ax_check_docbook_xslt_min,  Next: ax_check_dos_filesys,  Prev: ax_check_docbook_xslt,  Up: The Macros

ax_check_docbook_xslt_min
=========================

Synopsis
********

     AX_CHECK_DOCBOOK_XSLT_MIN(min-xslt-version)

Description
***********

Check that the 'current' version of docbook is at least version
min-xslt-version.  If the test is successful,
$DOCBOOK_XSLT_CURRENT_VERSION will be set to the current docbook
version; if not, it will be set to 'no'.

Example:

      AX_CHECK_DOCBOOK_XSLT_MIN(1.72.0)
      if test "x$DOCBOOK_XSLT_CURRENT_VERSION" = "xno"; then
      ...

Source Code
***********

Download the latest version of 'ax_check_docbook_xslt_min.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_docbook_xslt_min.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_docbook_xslt_min.m4).

License
*******

Copyright (C) 2008 Zmanda Inc. <http://www.zmanda.com/>
Copyright (C) 2008 Dustin J. Mitchell <dustin@zmanda.com>

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <https://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro.  You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them.  The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive.  When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.


File: autoconf-archive.info,  Node: ax_check_dos_filesys,  Next: ax_check_enable_debug,  Prev: ax_check_docbook_xslt_min,  Up: The Macros

ax_check_dos_filesys
====================

Synopsis
********

     AX_CHECK_DOS_FILESYS_LIMITATIONS

Description
***********

Check if the target is running on DOS. DOS doesn't allow a dot as the
first character, more than one dot, more than eight characters before a
dot, and just three letters after the dot.  A DOS VM running under
Windows 9X does not have these restrictions.  A DOS program can be
running in either environment, so its important to code accordingly.
Defines HAVE_DOS_FILESYS_LIMITATIONS if under DOS.

Use in conjunction with AX_CHECK_PATHNAME_STYLE_DOS.

Source Code
***********

Download the latest version of 'ax_check_dos_filesys.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_dos_filesys.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_dos_filesys.m4).

License
*******

Copyright (C) 2008 Mark Elbrecht

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <https://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro.  You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them.  The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive.  When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.


File: autoconf-archive.info,  Node: ax_check_enable_debug,  Next: ax_check_func_in,  Prev: ax_check_dos_filesys,  Up: The Macros

ax_check_enable_debug
=====================

Synopsis
********

     AX_CHECK_ENABLE_DEBUG([enable by default=yes/info/profile/no], [ENABLE DEBUG VARIABLES ...], [DISABLE DEBUG VARIABLES NDEBUG ...], [IS-RELEASE])

Description
***********

Check for the presence of an -enable-debug option to configure, with the
specified default value used when the option is not present.  Return the
value in the variable $ax_enable_debug.

Specifying 'yes' adds '-g -O0' to the compilation flags for all
languages.  Specifying 'info' adds '-g' to the compilation flags.
Specifying 'profile' adds '-g -pg' to the compilation flags and '-pg' to
the linking flags.  Otherwise, nothing is added.

Define the variables listed in the second argument if debug is enabled,
defaulting to no variables.  Defines the variables listed in the third
argument if debug is disabled, defaulting to NDEBUG. All lists of
variables should be space-separated.

If debug is not enabled, ensure AC_PROG_* will not add debugging flags.
Should be invoked prior to any AC_PROG_* compiler checks.

IS-RELEASE can be used to change the default to 'no' when making a
release.  Set IS-RELEASE to 'yes' or 'no' as appropriate.  By default,
it uses the value of $ax_is_release, so if you are using the
AX_IS_RELEASE macro, there is no need to pass this parameter.

       AX_IS_RELEASE([git-directory])
       AX_CHECK_ENABLE_DEBUG()

Source Code
***********

Download the latest version of 'ax_check_enable_debug.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_enable_debug.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_enable_debug.m4).

License
*******

Copyright (C) 2011 Rhys Ulerich <rhys.ulerich@gmail.com>
Copyright (C) 2014, 2015 Philip Withnall <philip@tecnocode.co.uk>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.


File: autoconf-archive.info,  Node: ax_check_func_in,  Next: ax_check_gd,  Prev: ax_check_enable_debug,  Up: The Macros

ax_check_func_in
================

Synopsis
********

     AX_CHECK_FUNC_IN(HEADER, FUNCTION [,ACTION-IF-FOUND [,ACTION-IF-NOT-FOUND]])

Description
***********

Checking for library functions in a given header file.

Source Code
***********

Download the latest version of 'ax_check_func_in.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_func_in.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_func_in.m4).

License
*******

Copyright (C) 2008 Guido U. Draheim <guidod@gmx.de>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_gd,  Next: ax_check_gir_symbols_gjs,  Prev: ax_check_func_in,  Up: The Macros

ax_check_gd
===========

Synopsis
********

     AX_CHECK_GD

Description
***********

Check for the gd library.  (See http://www.boutell.com/gd/) If gd is
found, the output variables GD_CFLAGS, GD_LDFLAGS and GD_LIBS will
contain the compiler flags, linker flags and libraries necessary to use
gd; otherwise, those variables will be empty.  In addition, the symbol
HAVE_GD is defined if the library is found, and the symbols HAVE_GD_GIF,
HAVE_GD_JPEG and HAVE_GD_PNG are defined if the library supports
creating images in gif, jpeg and png formats, respectively.

The user may use -with-gd=no or -without-gd to skip checking for the
library.  (The default is -with-gd=yes.)  If the library is installed in
an unusual location, -with-gd=DIR will cause the macro to look for
gdlib-config in DIR/bin or, failing that, for the headers and libraries
in DIR/include and DIR/lib.

Feedback welcome!

Source Code
***********

Download the latest version of 'ax_check_gd.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_gd.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_gd.m4).

License
*******

Copyright (C) 2008 Nick Markham <markhn@rpi.edu>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_gir_symbols_gjs,  Next: ax_check_girs_gjs,  Prev: ax_check_gd,  Up: The Macros

ax_check_gir_symbols_gjs
========================

Synopsis
********

     AX_CHECK_GIR_SYMBOLS_GJS(MODULE, APIVERSION, SYMBOLS)

Description
***********

Check that each symbol from the whitespace-separated list of $SYMBOLS is
defined inside the GObject Introspection module $MODULE with API version
$APIVERSION, and is importable in GJS, GNOME's JavaScript engine
(https://wiki.gnome.org/Projects/Gjs).

GObject Introspection
(https://wiki.gnome.org/Projects/GObjectIntrospection) is a tool for
generating bindings from C libraries to higher-level languages.  The
bindings live in a GObject Introspection repository (GIR) file, which is
what this macro checks.

Note that for the purposes of GObject Introspection, the API version is
different from the release version.  For example, GTK currently has API
version 3.0, but that could mean any release from the 3.0, 3.2, 3.4,...
series.

Example:

       AX_CHECK_GIR_SYMBOLS_GJS([Gtk], [3.0], [ListBox FlowBox
                                               Widget.get_action_group])

NOTE: This macro depends on AX_PROG_GJS.

Source Code
***********

Download the latest version of 'ax_check_gir_symbols_gjs.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_gir_symbols_gjs.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_gir_symbols_gjs.m4).

License
*******

Copyright (C) 2013, 2016 Endless Mobile, Inc.; contributed by Philip Chimento <philip@endlessm.com>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_girs_gjs,  Next: ax_check_gl,  Prev: ax_check_gir_symbols_gjs,  Up: The Macros

ax_check_girs_gjs
=================

Synopsis
********

     AX_CHECK_GIRS_GJS(MODULE, API_VERSION [, MODULE, API_VERSION...])

Description
***********

Check that the GObject Introspection module $MODULE is importable in GJS
(GNOME's JavaScript engine, https://wiki.gnome.org/Projects/Gjs).  The
API version must be $API_VERSION.

GObject Introspection
(https://wiki.gnome.org/Projects/GObjectIntrospection) is a tool for
generating bindings from C libraries to higher-level languages.  The
bindings live in a GObject Introspection repository (GIR) file, which is
what this macro checks.

Note that for the purposes of GObject Introspection, the API version is
different from the release version.  For example, GTK currently has API
version 3.0, but that could mean any release from the 3.0, 3.2, 3.4,...
series.  To check for specific API that was added in a later version,
use AX_CHECK_GIR_SYMBOLS_GJS.

Example:

       AX_CHECK_GIRS_GJS([Gdk], [3.0],
                         [Gtk], [3.0])

NOTE: This macro depends on AX_PROG_GJS.

Source Code
***********

Download the latest version of 'ax_check_girs_gjs.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_girs_gjs.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_girs_gjs.m4).

License
*******

Copyright (C) 2013, 2016 Endless Mobile, Inc.; contributed by Philip Chimento <philip@endlessm.com>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_gl,  Next: ax_check_glu,  Prev: ax_check_girs_gjs,  Up: The Macros

ax_check_gl
===========

Synopsis
********

     AX_CHECK_GL([ACTION-IF-FOUND],[ACTION-IF-NOT-FOUND])

Description
***********

Checks for an OpenGL implementation.  If a valid OpenGL implementation
is found, this macro would set C preprocessor symbol HAVE_GL to 1.

If either a valid OpenGL header or library was not found, by default the
configuration would exits on error.  This behavior can be overwritten by
providing a custom "ACTION-IF-NOT-FOUND" hook.

If the header, library was found, and been tested for compiling and
linking the configuration would export the required compiler flags to
"GL_CFLAGS" and "GL_LIBS". These two variables can also be overwritten
by user from the command line if they want to link against the library
they specified instead of having the configuration script to detect the
flags automatically.  Note that having "GL_CFLAGS" or "GL_LIBS" set
doesn't mean it can compile or link with the flags, since it could be
overwritten by user.  However the "HAVE_GL" symbol and "ACTION-IF-FOUND"
hook is always guaranteed to reflect a valid OpenGL implementation.

If user didn't specify the "ACTION-IF-FOUND" hook, the configuration
would prepend "GL_CFLAGS" and "GL_LIBS" to "CFLAGS" and "LIBS", like
many other autoconf macros do.

OpenGL is one of the libraries that has different header names on
different platforms.  This macro does the header detection, and will
export the following symbol: "HAVE_GL_GL_H" for having "GL/gl.h" or
"HAVE_OPENGL_GL_H" for having "OpenGL/gl.h".  To write a portable OpenGL
code, you should include OpenGL header like so:

       #if defined(HAVE_WINDOWS_H) && defined(_WIN32)
       # include <windows.h>
       #endif
       #ifdef HAVE_GL_GL_H
       # include <GL/gl.h>
       #elif defined(HAVE_OPENGL_GL_H)
       # include <OpenGL/gl.h>
       #else
       # error no gl.h
       #endif

On the OSX platform, there's two possible OpenGL implementation.  One is
the OpenGL that ships with OSX, the other comes with X11/XQuartz
(http://www.xquartz.org).  To use the xquartz variant, user can use the
option -with-xquartz-gl[=path to xquartz root].  By default the
configuration will check "/opt/X11", which is the default X11 install
location on OSX.

Source Code
***********

Download the latest version of 'ax_check_gl.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_gl.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_gl.m4).

License
*******

Copyright (C) 2009 Braden McDaniel <braden@endoframe.com>
Copyright (C) 2012 Bastien Roucaries <roucaries.bastien+autoconf@gmail.com>

Copyright (C) 2016 Felix Chern <idryman@gmail.com>

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <https://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro.  You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them.  The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive.  When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.


File: autoconf-archive.info,  Node: ax_check_glu,  Next: ax_check_glut,  Prev: ax_check_gl,  Up: The Macros

ax_check_glu
============

Synopsis
********

     AX_CHECK_GLU([ACTION-IF-FOUND],[ACTION-IF-NOT-FOUND])

Description
***********

Checks for GLUT. If a valid GLU implementation is found, the configure
script would export the C preprocessor symbol "HAVE_GLU=1".

If either a valid GLU header or library was not found, by default the
configure script would exit on error.  This behavior can be overwritten
by providing a custom "ACTION-IF-NOT-FOUND" hook.

If the header, library was found, and been tested for compiling and
linking the configuration would export the required compiler flags to
"GLU_CFLAGS" and "GLU_LIBS" environment variables.  These two variables
can also be overwritten by defining the environment variables before
executing the configure program.  If it was predefined, configure would
not try to overwrite it, but it would still perform the compile and link
test.  Only when the tests succeeded does the configure script to export
"HAVE_GLU=1" and to run "ACTION-IF-FOUND" hook.

If user didn't specify the "ACTION-IF-FOUND" hook, the configuration
would prepend "GLU_CFLAGS" and "GLU_LIBS" to "CFLAGS" and "LIBS", like
many other autoconf macros do.

If the header "GL/glu.h" is found, "HAVE_GL_GLU_H" is defined.  If the
header "OpenGL/glu.h" is found, HAVE_OPENGL_GLU_H is defined.

You should use something like this in your headers:

       # if defined(HAVE_WINDOWS_H) && defined(_WIN32)
       #  include <windows.h>
       # endif
       # if defined(HAVE_GL_GLU_H)
       #  include <GL/glu.h>
       # elif defined(HAVE_OPENGL_GLU_H)
       #  include <OpenGL/glu.h>
       # else
       #  error no glu.h
       # endif

On the OSX platform, you can use the option -with-xquartz-gl to use
X11/Xquartz GLU implementation instead of the system built in GLU
framework.

Some implementations (in particular, some versions of Mac OS X) are
known to treat the GLU tesselator callback function type as "GLvoid
(*)(...)"  rather than the standard "GLvoid (*)()".  If the former
condition is detected, this macro defines "HAVE_VARARGS_GLU_TESSCB".

Source Code
***********

Download the latest version of 'ax_check_glu.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_glu.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_glu.m4).

License
*******

Copyright (C) 2009 Braden McDaniel <braden@endoframe.com>
Copyright (C) 2013 Bastien Roucaries <roucaries.bastien+autoconf@gmail.com>

Copyright (C) 2016 Felix Chern <idryman@gmail.com>

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <https://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro.  You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them.  The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive.  When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.


File: autoconf-archive.info,  Node: ax_check_glut,  Next: ax_check_glx,  Prev: ax_check_glu,  Up: The Macros

ax_check_glut
=============

Synopsis
********

     AX_CHECK_GLUT([ACTION-IF-FOUND],[ACTION-IF-NOT-FOUND])

Description
***********

Checks for GLUT. If a valid GLUT implementation is found, the configure
script would export the C preprocessor symbol "HAVE_GLUT=1".

If either a valid GLUT header or library was not found, by default the
configure script would exit on error.  This behavior can be overwritten
by providing a custom "ACTION-IF-NOT-FOUND" hook.

If the header, library was found, and been tested for compiling and
linking the configuration would export the required compiler flags to
"GLUT_CFLAGS" and "GLUT_LIBS" environment variables.  These two
variables can also be overwritten by defining the environment variables
before executing the configure program.  If it was predefined, configure
would not try to overwrite it, but it would still perform the compile
and link test.  Only when the tests succeeded does the configure script
to export "HAVE_GLUT=1" and to run "ACTION-IF-FOUND" hook.

If user didn't specify the "ACTION-IF-FOUND" hook, the configuration
would prepend "GLUT_CFLAGS" and "GLUT_LIBS" to "CFLAGS" and "LIBS", like
many other autoconf macros do.

If the header "GL/glut.h" is found, "HAVE_GL_GLUT_H" is defined.  If the
header "GLUT/glut.h" is found, HAVE_GLUT_GLUT_H is defined.

You should use something like this in your headers:

       # if HAVE_WINDOWS_H && defined(_WIN32)
       #  include <windows.h>
       # endif
       # if defined(HAVE_GL_GLUT_H)
       #  include <GL/glut.h>
       # elif defined(HAVE_GLUT_GLUT_H)
       #  include <GLUT/glut.h>
       # else
       #  error no glut.h
       # endif

On the OSX platform, you can use the option -with-xquartz-gl to use
X11/Xquartz GLUT implementation instead of the system built in GLUT
framework.

Source Code
***********

Download the latest version of 'ax_check_glut.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_glut.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_glut.m4).

License
*******

Copyright (C) 2009 Braden McDaniel <braden@endoframe.com>
Copyright (C) 2013 Bastien Roucaries <roucaries.bastien+autoconf@gmail.com>

Copyright (C) 2016 Felix Chern <idryman@gmail.com>

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <https://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro.  You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them.  The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive.  When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.


File: autoconf-archive.info,  Node: ax_check_glx,  Next: ax_check_gnu_make,  Prev: ax_check_glut,  Up: The Macros

ax_check_glx
============

Synopsis
********

     AX_CHECK_GLX

Description
***********

Check for GLX. If GLX is found, the required preprocessor and linker
flags are included in the output variables "GLX_CFLAGS" and "GLX_LIBS",
respectively.  If no GLX implementation is found, "no_glx" is set to
"yes".

If the header "GL/glx.h" is found, "HAVE_GL_GLX_H" is defined.  If the
header "OpenGL/glx.h" is found, HAVE_OPENGL_GLX_H is defined.  These
preprocessor definitions may not be mutually exclusive.

You should use something like this in your headers:

       # if defined(HAVE_WINDOWS_H) && defined(_WIN32)
       #  include <windows.h>
       # endif
       # if defined(HAVE_GL_GLX_H)
       #  include <GL/glx.h>
       # elif defined(HAVE_OPENGL_GLX_H)
       #  include <OpenGL/glx.h>
       # else
       #  error no glx.h
       # endif

Source Code
***********

Download the latest version of 'ax_check_glx.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_glx.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_glx.m4).

License
*******

Copyright (C) 2009 Braden McDaniel <braden@endoframe.com>
Copyright (C) 2013-2014 Bastien Roucaries <roucaries.bastien+autoconf@gmail.com>

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <https://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro.  You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them.  The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive.  When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.


File: autoconf-archive.info,  Node: ax_check_gnu_make,  Next: ax_check_icu,  Prev: ax_check_glx,  Up: The Macros

ax_check_gnu_make
=================

Synopsis
********

     AX_CHECK_GNU_MAKE([run-if-true],[run-if-false])

Description
***********

This macro searches for a GNU version of make.  If a match is found:

       * The makefile variable `ifGNUmake' is set to the empty string, otherwise
         it is set to "#". This is useful for including a special features in a
         Makefile, which cannot be handled by other versions of make.
       * The makefile variable `ifnGNUmake' is set to #, otherwise
         it is set to the empty string. This is useful for including a special
         features in a Makefile, which can be handled
         by other versions of make or to specify else like clause.
       * The variable `_cv_gnu_make_command` is set to the command to invoke
         GNU make if it exists, the empty string otherwise.
       * The variable `ax_cv_gnu_make_command` is set to the command to invoke
         GNU make by copying `_cv_gnu_make_command`, otherwise it is unset.
       * If GNU Make is found, its version is extracted from the output of
         `make --version` as the last field of a record of space-separated
         columns and saved into the variable `ax_check_gnu_make_version`.
       * Additionally if GNU Make is found, run shell code run-if-true
         else run shell code run-if-false.

Here is an example of its use:

Makefile.in might contain:

       # A failsafe way of putting a dependency rule into a makefile
       $(DEPEND):
               $(CC) -MM $(srcdir)/*.c > $(DEPEND)

       @ifGNUmake@ ifeq ($(DEPEND),$(wildcard $(DEPEND)))
       @ifGNUmake@ include $(DEPEND)
       @ifGNUmake@ else
       fallback code
       @ifGNUmake@ endif

Then configure.in would normally contain:

       AX_CHECK_GNU_MAKE()
       AC_OUTPUT(Makefile)

Then perhaps to cause gnu make to override any other make, we could do
something like this (note that GNU make always looks for GNUmakefile
first):

       if  ! test x$_cv_gnu_make_command = x ; then
               mv Makefile GNUmakefile
               echo .DEFAULT: > Makefile ;
               echo \  $_cv_gnu_make_command \$@ >> Makefile;
       fi

Then, if any (well almost any) other make is called, and GNU make also
exists, then the other make wraps the GNU make.

Source Code
***********

Download the latest version of 'ax_check_gnu_make.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_gnu_make.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_gnu_make.m4).

License
*******

Copyright (C) 2008 John Darrington <j.darrington@elvis.murdoch.edu.au>
Copyright (C) 2015 Enrico M. Crisostomo <enrico.m.crisostomo@gmail.com>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_icu,  Next: ax_check_java_home,  Prev: ax_check_gnu_make,  Up: The Macros

ax_check_icu
============

Synopsis
********

     AX_CHECK_ICU(version, action-if, action-if-not)

Description
***********

Defines ICU_LIBS, ICU_CFLAGS, ICU_CXXFLAGS. See icu-config(1) man page.

Source Code
***********

Download the latest version of 'ax_check_icu.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_icu.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_icu.m4).

License
*******

Copyright (C) 2008 Akos Maroy <darkeye@tyrell.hu>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_java_home,  Next: ax_check_java_plugin,  Prev: ax_check_icu,  Up: The Macros

ax_check_java_home
==================

Synopsis
********

     AX_CHECK_JAVA_HOME

Description
***********

Check for Sun Java (JDK / JRE) installation, where the 'java' VM is in.
If found, set environment variable JAVA_HOME = Java installation home,
else left JAVA_HOME untouch, which in most case means JAVA_HOME is
empty.

Source Code
***********

Download the latest version of 'ax_check_java_home.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_java_home.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_java_home.m4).

License
*******

Copyright (C) 2008 Gleen Salmon <gleensalmon@yahoo.com>

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <https://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro.  You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them.  The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive.  When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.


File: autoconf-archive.info,  Node: ax_check_java_plugin,  Next: ax_check_junit,  Prev: ax_check_java_home,  Up: The Macros

ax_check_java_plugin
====================

Synopsis
********

     AX_CHECK_JAVA_PLUGIN(<shell-variable>)

Description
***********

This macro sets <shell-variable> to empty on failure and to a compatible
version of plugin.jar otherwise.  Directories searched are /usr/java/*
and /usr/local/java/*, which are assumed to be j{dk,re} installations.
Apply the shell variable as you see fit.  If sun changes things so
<jre>/lib/plugin.jar is not the magic file it will stop working.

This macro assumes that unzip, zipinfo or pkzipc is available (and can
list the contents of the jar archive).  The first two are assumed to
work similarly enough to the infozip versions.  The pkzipc version is
assumed to work if I understand the documentation on pkware's site but
YMMV. I do not have access to pwkware's version to test it.

Source Code
***********

Download the latest version of 'ax_check_java_plugin.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_java_plugin.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_java_plugin.m4).

License
*******

Copyright (C) 2008 Duncan Simpson <dps@simpson.demon.co.uk>

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <https://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro.  You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them.  The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive.  When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.


File: autoconf-archive.info,  Node: ax_check_junit,  Next: ax_check_library,  Prev: ax_check_java_plugin,  Up: The Macros

ax_check_junit
==============

Synopsis
********

     AX_CHECK_JUNIT

Description
***********

AX_CHECK_JUNIT tests the availability of the Junit testing framework,
and set some variables for conditional compilation of the test suite by
automake.

If available, JUNIT is set to a command launching the text based user
interface of Junit, @JAVA_JUNIT@ is set to $JAVA_JUNIT and @TESTS_JUNIT@
is set to $TESTS_JUNIT, otherwise they are set to empty values.

You can use these variables in your Makefile.am file like this :

      # Some of the following classes are built only if junit is available
      JAVA_JUNIT  = Class1Test.java Class2Test.java AllJunitTests.java

      noinst_JAVA = Example1.java Example2.java @JAVA_JUNIT@

      EXTRA_JAVA  = $(JAVA_JUNIT)

      TESTS_JUNIT = AllJunitTests

      TESTS       = StandaloneTest1 StandaloneTest2 @TESTS_JUNIT@

      EXTRA_TESTS = $(TESTS_JUNIT)

      AllJunitTests :
         echo "#! /bin/sh" > $@
         echo "exec @JUNIT@ my.package.name.AllJunitTests" >> $@
         chmod +x $@

Source Code
***********

Download the latest version of 'ax_check_junit.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_junit.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_junit.m4).

License
*******

Copyright (C) 2008 Luc Maisonobe <luc@spaceroots.org>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_library,  Next: ax_check_link_flag,  Prev: ax_check_junit,  Up: The Macros

ax_check_library
================

Synopsis
********

     AX_CHECK_LIBRARY(VARIABLE-PREFIX, HEADER-FILE, LIBRARY-FILE,
                      [ACTION-IF-FOUND], [ACTION-IF-NOT_FOUND])

Description
***********

Provides a generic test for a given library, similar in concept to the
PKG_CHECK_MODULES macro used by pkg-config.

Most simplest libraries can be checked against simply through the
presence of a header file and a library to link to.  This macro allows
to wrap around the test so that it doesn't have to be recreated each
time.

Rather than define -with-$LIBRARY arguments, it uses variables in the
same way that PKG_CHECK_MODULES does.  It doesn't, though, use the same
names, since you shouldn't provide a value for LIBS or CFLAGS but rather
for LDFLAGS and CPPFLAGS, to tell the linker and compiler where to find
libraries and headers respectively.

If the library is find, HAVE_PREFIX is defined, and in all cases
PREFIX_LDFLAGS and PREFIX_CPPFLAGS are substituted.

Example:

       AX_CHECK_LIBRARY([LIBEVENT], [event.h], [event], [],
                        [AC_MSG_ERROR([Unable to find libevent])])

Source Code
***********

Download the latest version of 'ax_check_library.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_library.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_library.m4).

License
*******

Copyright (C) 2010 Diego Elio Petteno' <flameeyes@gmail.com>

This program is free software: you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation, either version 3 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <https://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro.  You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them.  The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive.  When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.


File: autoconf-archive.info,  Node: ax_check_link_flag,  Next: ax_check_mysql,  Prev: ax_check_library,  Up: The Macros

ax_check_link_flag
==================

Synopsis
********

     AX_CHECK_LINK_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])

Description
***********

Check whether the given FLAG works with the linker or gives an error.
(Warnings, however, are ignored)

ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on
success/failure.

If EXTRA-FLAGS is defined, it is added to the linker's default flags
when the check is done.  The check is thus made with the flags: "LDFLAGS
EXTRA-FLAGS FLAG". This can for example be used to force the linker to
issue an error when a bad flag is given.

INPUT gives an alternative input source to AC_LINK_IFELSE.

NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this
macro in sync with AX_CHECK_{PREPROC,COMPILE}_FLAG.

Source Code
***********

Download the latest version of 'ax_check_link_flag.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_link_flag.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_link_flag.m4).

License
*******

Copyright (C) 2008 Guido U. Draheim <guidod@gmx.de>
Copyright (C) 2011 Maarten Bosmans <mkbosmans@gmail.com>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_mysql,  Next: ax_check_mysql_db,  Prev: ax_check_link_flag,  Up: The Macros

ax_check_mysql
==============

Synopsis
********

     AX_CHECK_MYSQL([MYSQL-PLUGIN-NEEDED],[MYSQL-REQUIRED],[MINIMUM-VERSION],[INCLUDES-REQUIRED])
     AX_SOURCE_MYSQL()
     AX_CHECK_MYSQL_INSTALL([ROOT-DIR],[IF-FOUND],[IF-NOT-FOUND])

Description
***********

Looks for a MySQL installation in typical locations, or can take in a
flag designating where a MySQL installation is found.  Sets the
variables stated to various attributes of the desired MySQL
installation.

In detail, AX_CHECK_MYSQL will automatically look for a MySQL
installation in the directories that a mysql source or binary install
typically install to.  AX_CHECK_MYSQL will throw an error if it cannot
find one, and it is required.

AX_CHECK_MYSQL can also check for specific variables passed regarding a
location of a MySQL installation.

If a MySQL installation is found, AX_CHECK_MYSQL sets variables
regarding the version of MySQL, its architecture (32 or 64 bit), and
whether the version supports Plugins.

AX_CHECK_MYSQL_INSTALL will check a designated root directory for a
command, plugin, and include directory.  If a mysql binary is not found
or not found, the IF-FOUND and IF-NOT-FOUND directive will be executed,
respectively.

AX_CHECK_MYSQL adds the following flags:

       --with-mysql, for the root of a desired MySQL installation
       --with-mysql-plugin, for the path to the plugin directory of the MySQL installation
       --with-mysql-include, for the path to the include directory of the MySQL installation
       --with-mysql-command, for the path to the binary directory of the MySQL installation
       --with-mysql-source, for the path to a directory containing the source of the MySQL installation

AX_CHECK_MYSQL sets:

       MYSQL to indicate whether MySQL was found or not
       MYSQL_INCLUDES to the include directory (if one exists)
       MYSQL_PLUGINS  to the plugin directory
       MYSQL_COMMANDS  to the mysql executable directory
       MYSQL_ARCHITECTURE to whether MySQL is 32 or 64 bit (32 if 32, 64 if 64)
       MYSQL_VERSION to what the MySQL version is (5.1,5.5, etc)
       MYSQL_PLUGIN_OK to whether MySQL version supports plugins (5.1 or greater)
       MYSQL_55 to whether the version of MySQL is 5.5 or greater
       MYSQL_SOURCE  to the source directory passed by --with-mysql-source

Source Code
***********

Download the latest version of 'ax_check_mysql.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_mysql.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_mysql.m4).

License
*******

Copyright (C) 2011 University of Washington
Copyright (C) 2011 Yusuke Tsutsumi <tsutsumi.yusuke@gmail.com>
Copyright (C) 2011 Craig Stimmel <cstimmel@uw.edu>
Copyright (C) 2011 Eric Wu

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_mysql_db,  Next: ax_check_mysqlr,  Prev: ax_check_mysql,  Up: The Macros

ax_check_mysql_db
=================

Synopsis
********

     AX_CHECK_MYSQL_DB

Description
***********

Check if the specified MySQL database exists, if yes set your
environment variable to that database name else unset your environment
variable

Example:

       AX_CHECK_MYSQL_DB(DBNAME, [fishmarket])
       if test x$DBNAME = xfishmarket; then
           bla..bla..bla..
       else
           bla..bla..bla..
       fi

Source Code
***********

Download the latest version of 'ax_check_mysql_db.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_mysql_db.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_mysql_db.m4).

License
*******

Copyright (C) 2008 Gleen Salmon <gleensalmon@yahoo.com>

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <https://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro.  You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them.  The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive.  When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.


File: autoconf-archive.info,  Node: ax_check_mysqlr,  Next: ax_check_off64_t,  Prev: ax_check_mysql_db,  Up: The Macros

ax_check_mysqlr
===============

Synopsis
********

     AX_CHECK_MYSQLR

Description
***********

First check if mysqlconfig exists.  It fails if mysqlconfig is not in
path.  Then it checks for the libraries and replaces -lmysqlclient
statement with -lmysqlclient_r statement, to enable threaded client
library.

The following are exported environment variables:

       MYSQL_LIBS
       MYSQL_CFLAGS

Source Code
***********

Download the latest version of 'ax_check_mysqlr.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_mysqlr.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_mysqlr.m4).

License
*******

Copyright (C) 2008 Can Bican <bican@yahoo.com>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_off64_t,  Next: ax_check_openssl,  Prev: ax_check_mysqlr,  Up: The Macros

ax_check_off64_t
================

Synopsis
********

     AX_CHECK_OFF64_T

Description
***********

Check if off64_t is defined.  On true define HAVE_OFF64_T, also define
__LARGEFILE64_SOURCE where one is needed.  (Note that an appropriative
entry must be in config.h.in.)

Source Code
***********

Download the latest version of 'ax_check_off64_t.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_off64_t.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_off64_t.m4).

License
*******

Copyright (C) 2008 Ruslan Shevchenko <Ruslan@Shevchenko.Kiev.UA>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_openssl,  Next: ax_check_page_aligned_malloc,  Prev: ax_check_off64_t,  Up: The Macros

ax_check_openssl
================

Synopsis
********

     AX_CHECK_OPENSSL([action-if-found[, action-if-not-found]])

Description
***********

Look for OpenSSL in a number of default spots, or in a user-selected
spot (via -with-openssl).  Sets

       OPENSSL_INCLUDES to the include directives required
       OPENSSL_LIBS to the -l directives required
       OPENSSL_LDFLAGS to the -L or -R flags required

and calls ACTION-IF-FOUND or ACTION-IF-NOT-FOUND appropriately

This macro sets OPENSSL_INCLUDES such that source files should use the
openssl/ directory in include directives:

       #include <openssl/hmac.h>

Source Code
***********

Download the latest version of 'ax_check_openssl.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_openssl.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_openssl.m4).

License
*******

Copyright (C) 2009,2010 Zmanda Inc. <http://www.zmanda.com/>
Copyright (C) 2009,2010 Dustin J. Mitchell <dustin@zmanda.com>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_page_aligned_malloc,  Next: ax_check_pathfind,  Prev: ax_check_openssl,  Up: The Macros

ax_check_page_aligned_malloc
============================

Synopsis
********

     AX_CHECK_PAGE_ALIGNED_MALLOC

Description
***********

Some operating systems (generally, BSD Unix variants) lack a
posix_memalign function, a memalign function, and a working (meaning,
the memory can be freed) valloc function.  To make up for it, the malloc
function promises to return page-aligned addresses if more than one
page's worth of memory is allocated.  AX_CHECK_PAGE_ALIGNED_MALLOC
checks for this condition and defines HAVE_PAGE_ALIGNED_MALLOC if the
condition holds.

As an aside, note that valloc'd memory cannot safely be freed on all
operating systems.  (Again, some flavors of BSD are the troublemakers.)
It's best to avoid using valloc in favor of posix_memalign, memalign, or
an aligned malloc as detected by AX_CHECK_PAGE_ALIGNED_MALLOC.

Caveat: AX_CHECK_PAGE_ALIGNED_MALLOC takes a probabilistic approach.  If
100 calls to malloc all return page-aligned addresses, it assumes that
all calls will behave likewise.  It is therefore possible - albeit
extremely unlikely - that AX_CHECK_PAGE_ALIGNED_MALLOC can return a
false positive.

Source Code
***********

Download the latest version of 'ax_check_page_aligned_malloc.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_page_aligned_malloc.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_page_aligned_malloc.m4).

License
*******

Copyright (C) 2008 Scott Pakin <pakin@uiuc.edu>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_pathfind,  Next: ax_check_pathname_style,  Prev: ax_check_page_aligned_malloc,  Up: The Macros

ax_check_pathfind
=================

Synopsis
********

     AX_CHECK_PATHFIND

Description
***********

Not all systems have pathfind(3).  See if we need to substitute.  To
make this work, you have to do horrible things.  See the doc for
AX_CHECK_STRCSPN.

Source Code
***********

Download the latest version of 'ax_check_pathfind.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_pathfind.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_pathfind.m4).

License
*******

Copyright (C) 2008 Bruce Korb <bkorb@gnu.org>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_pathname_style,  Next: ax_check_pcre2,  Prev: ax_check_pathfind,  Up: The Macros

ax_check_pathname_style
=======================

Synopsis
********

     AX_CHECK_PATHNAME_STYLE_DOS

Description
***********

Check if host OS uses DOS-style pathnames.  This includes the use of
drive letters and backslashes.  Under DOS, Windows, and OS/2, defines
HAVE_PATHNAME_STYLE_DOS and PATH_SEPARATOR to ';'.  Otherwise, defines
PATH_SEPARATOR to ':'.

This macro depends on the AC_CANONICAL_HOST.

Use for enabling code to handle drive letters, backslashes in filenames
and semicolons in the PATH.

Source Code
***********

Download the latest version of 'ax_check_pathname_style.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_pathname_style.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_pathname_style.m4).

License
*******

Copyright (C) 2008 Mark Elbrecht

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <https://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro.  You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them.  The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive.  When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.


File: autoconf-archive.info,  Node: ax_check_pcre2,  Next: ax_check_pgsql_db,  Prev: ax_check_pathname_style,  Up: The Macros

ax_check_pcre2
==============

Synopsis
********

     AX_CHECK_PCRE2([bits], [action-if-found], [action-if-not-found])

Description
***********

Search for an installed libpcre2-8 library.  If nothing was specified
when calling configure, it searches first in /usr/local and then in
/usr, /opt/local and /sw.  If the -with-pcre2=DIR is specified, it will
try to find it in DIR/include/pcre2.h and DIR/lib/libpcre2-8.  If
-without-pcre2 is specified, the library is not searched at all.

If 'bits' is empty or '8', PCRE2 8-bit character support is checked
only.  If 'bits' contains '16', PCRE2 8-bit and 16-bit character support
are checked.  If 'bits' contains '32', PCRE2 8-bit and 32-bit character
support are checked.  When 'bits' contains both '16' and '32', PCRE2
8-bit, 16-bit, and 32-bit character support is checked.

If either the header file (pcre2.h), or the library (libpcre2-8) is not
found, or the specified PCRE2 character bit width is not supported,
shell commands 'action-if-not-found' is run.  If 'action-if-not-found'
is not specified, the configuration exits on error, asking for a valid
PCRE2 installation directory or -without-pcre2.

If both header file and library are found, and the specified PCRE2 bit
widths are supported, shell commands 'action-if-found' is run.  If
'action-if-found' is not specified, the default action appends
'-I${PCRE2_HOME}/include' to CPFLAGS, appends '-L$PCRE2_HOME}/lib' to
LDFLAGS, prepends '-lpcre2-8' to LIBS, and calls AC_DEFINE(HAVE_PCRE2).
You should use autoheader to include a definition for this symbol in a
config.h file.  Sample usage in a C/C++ source is as follows:

       #ifdef HAVE_PCRE2
       #define PCRE2_CODE_UNIT_WIDTH 8
       #include <pcre2.h>
       #endif /* HAVE_PCRE2 */

Source Code
***********

Download the latest version of 'ax_check_pcre2.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_pcre2.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_pcre2.m4).

License
*******

Copyright (C) 2020 Robert van Engelen <engelen@acm.org>

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <https://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro.  You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them.  The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive.  When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.


File: autoconf-archive.info,  Node: ax_check_pgsql_db,  Next: ax_check_posix_regcomp,  Prev: ax_check_pcre2,  Up: The Macros

ax_check_pgsql_db
=================

Synopsis
********

     AX_CHECK_PGSQL_DB([DB], [USER], [HOST], [PASSWORD], [ACTION_IF_FAILED], [ACTION_IF_OK])

Description
***********

This macro checks whether we can connect to a PostgreSQL server with the
given data.  The macro AX_PROG_PGCLIENT is required by this one.  The
variable $pgclient_call is set for later use in Makefiles, if you'd like
to make use of this, you must do

       AC_SUBST(pgclient_call)

after having called AX_CHECK_PGSQL_DB. You can then do something like
the following in your Makefile.am:

       @pgclient_call@ -f file.sql

If you want the user to set the data, you should support something like
these configure options:

       AC_ARG_WITH(pgsql-host,
               [  --with-pgsql-host=HOST               server is running on HOST @<:@local socket@:>@],
               [pg_host=$withval], [pg_host=])

       AC_ARG_WITH(pgsql-db,
               [  --with-pgsql-db=DATABASE             use DATABASE @<:@tarantoola@:>@],
               [pg_db=$withval], [pg_db=tarantoola])

       AC_ARG_WITH(pgsql-user,
               [  --with-pgsql-user=USER               use USER @<:@postgres@:>@],
               [pg_user=$withval], [pg_user=postgres])

       AC_ARG_WITH(pgsql-password,
               [  --with-pgsql-password=PASSWORD       use PASSWORD @<:@none@:>@],
               [pg_password=$withval], [pg_password=""])

You can then call the macro like this:

       AX_CHECK_PGSQL_DB([$pg_db], [$pg_user], [$pg_host], [$pg_password], [AC_MSG_ERROR([We need a database connection!])])

Source Code
***********

Download the latest version of 'ax_check_pgsql_db.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_pgsql_db.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_pgsql_db.m4).

License
*******

Copyright (C) 2008 Moritz Sinn <moritz@freesources.org>

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <https://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro.  You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them.  The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive.  When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.


File: autoconf-archive.info,  Node: ax_check_posix_regcomp,  Next: ax_check_posix_sysinfo,  Prev: ax_check_pgsql_db,  Up: The Macros

ax_check_posix_regcomp
======================

Synopsis
********

     AX_CHECK_POSIX_REGCOMP

Description
***********

Check that the POSIX compliant regular expression compiler is available
in the POSIX specified manner, and it works.  If it fails, we have a
backup - use gnu-regex.

Source Code
***********

Download the latest version of 'ax_check_posix_regcomp.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_posix_regcomp.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_posix_regcomp.m4).

License
*******

Copyright (C) 2008 Bruce Korb <bkorb@gnu.org>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.


File: autoconf-archive.info,  Node: ax_check_posix_sysinfo,  Next: ax_check_postgres_db,  Prev: ax_check_posix_regcomp,  Up: The Macros

ax_check_posix_sysinfo
======================

Synopsis
********

     AX_CHECK_POSIX_SYSINFO

Description
***********

Check that the POSIX compliant sysinfo(2) call works properly.  Linux
has its own weirdo alternative.

Source Code
***********

Download the latest version of 'ax_check_posix_sysinfo.m4'
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_posix_sysinfo.m4)
or browse the macro's revision history
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_check_posix_sysinfo.m4).

License
*******

Copyright (C) 2008 Bruce Korb <bkorb@gnu.org>

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved.  This file is offered as-is, without any
warranty.
